{"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\iput\\\\Downloads\\\\mobiletesting\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\iput\\\\Downloads\\\\mobiletesting\",\"filename\":\"C:\\\\Users\\\\iput\\\\Downloads\\\\mobiletesting\\\\wdio.conf.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\iput\\\\Downloads\\\\mobiletesting\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.6:test":{"value":{"code":"exports.config = {\n  //\n  // ====================\n  // Runner Configuration\n  // ====================\n  // WebdriverIO supports running e2e tests as well as unit and component tests.\n  runner: 'local',\n  port: 4729,\n  path: '/wd/hub',\n  //\n  // ==================\n  // Specify Test Files\n  // ==================\n  // Define which test specs should run. The pattern is relative to the directory\n  // of the configuration file being run.\n  //\n  // The specs are defined as an array of spec files (optionally using wildcards\n  // that will be expanded). The test for each spec file will be run in a separate\n  // worker process. In order to have a group of spec files run in the same worker\n  // process simply enclose them in an array within the specs array.\n  //\n  // The path of the spec files will be resolved relative from the directory of\n  // of the config file unless it's absolute.\n  //\n  specs: [\n  // ToDo: define location for spec files here\n  './test/specs/**/*.js'],\n  // Patterns to exclude.\n  exclude: [\n    // 'path/to/excluded/files'\n  ],\n  //\n  // ============\n  // Capabilities\n  // ============\n  // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n  // time. Depending on the number of capabilities, WebdriverIO launches several test\n  // sessions. Within your capabilities you can overwrite the spec and exclude options in\n  // order to group specific specs to a specific capability.\n  //\n  // First, you can define how many instances should be started at the same time. Let's\n  // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n  // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n  // files and you set maxInstances to 10, all spec files will get tested at the same time\n  // and 30 processes will get spawned. The property handles how many capabilities\n  // from the same test should run tests.\n  //\n  maxInstances: 10,\n  //\n  // If you have trouble getting all important capabilities together, check out the\n  // Sauce Labs platform configurator - a great tool to configure your capabilities:\n  // https://saucelabs.com/platform/platform-configurator\n  //\n  capabilities: [{\n    // capabilities for local Appium web tests on an Android Emulator\n    platformName: 'Android',\n    'appium:deviceName': 'vd-a13',\n    'appium:platformVersion': '13.0',\n    'appium:automationName': 'UiAutomator2',\n    'appium:appPackage': 'com.wdiodemoapp',\n    'appium:appActivity': 'com.wdiodemoapp.MainActivity',\n    'appium:app': 'C:/Users/iput/Downloads/mobiletesting/app/android.wdio.native.app.v1.0.8.apk'\n  }],\n  //\n  // ===================\n  // Test Configurations\n  // ===================\n  // Define all options that are relevant for the WebdriverIO instance here\n  //\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  logLevel: 'info',\n  //\n  // Set specific log levels per logger\n  // loggers:\n  // - webdriver, webdriverio\n  // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n  // - @wdio/mocha-framework, @wdio/jasmine-framework\n  // - @wdio/local-runner\n  // - @wdio/sumologic-reporter\n  // - @wdio/cli, @wdio/config, @wdio/utils\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  // logLevels: {\n  //     webdriver: 'info',\n  //     '@wdio/appium-service': 'info'\n  // },\n  //\n  // If you only want to run your tests until a specific amount of tests have failed use\n  // bail (default is 0 - don't bail, run all tests).\n  bail: 0,\n  //\n  // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n  // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n  // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n  // gets prepended directly.\n  baseUrl: 'http://localhost',\n  //\n  // Default timeout for all waitFor* commands.\n  waitforTimeout: 10000,\n  //\n  // Default timeout in milliseconds for request\n  // if browser driver or grid doesn't send response\n  connectionRetryTimeout: 120000,\n  //\n  // Default request retries count\n  connectionRetryCount: 3,\n  //\n  // Test runner services\n  // Services take over a specific job you don't want to take care of. They enhance\n  // your test setup with almost no effort. Unlike plugins, they don't add new\n  // commands. Instead, they hook themselves up into the test process.\n  services: [['appium', {\n    args: {\n      address: 'localhost',\n      port: 4729,\n      path: '/wd/hub'\n    }\n  }]],\n  // Framework you want to run your specs with.\n  // The following are supported: Mocha, Jasmine, and Cucumber\n  // see also: https://webdriver.io/docs/frameworks\n  //\n  // Make sure you have the wdio adapter package for the specific framework installed\n  // before running any tests.\n  framework: 'mocha',\n  //\n  // The number of times to retry the entire specfile when it fails as a whole\n  // specFileRetries: 1,\n  //\n  // Delay in seconds between the spec file retry attempts\n  // specFileRetriesDelay: 0,\n  //\n  // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n  // specFileRetriesDeferred: false,\n  //\n  // Test reporter for stdout.\n  // The only one supported by default is 'dot'\n  // see also: https://webdriver.io/docs/dot-reporter\n  reporters: [[\"html-nice\", {\n    outputDir: './reports/',\n    fileName: 'report.html',\n    reportTitle: 'Test Report',\n    //linkScreenshots: true,\n    showInBrowser: true\n    //useOnAfterCommandForScreenshot: true,\n  }], 'spec'],\n  // Options to be passed to Mocha.\n  // See the full list at http://mochajs.org/\n  mochaOpts: {\n    ui: 'bdd',\n    timeout: 60000\n  }\n\n  //\n  // =====\n  // Hooks\n  // =====\n  // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n  // it and to build services around it. You can either apply a single function or an array of\n  // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n  // resolved to continue.\n  /**\n   * Gets executed once before all workers get launched.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   */\n  // onPrepare: function (config, capabilities) {\n  // },\n  /**\n   * Gets executed before a worker process is spawned and can be used to initialize specific service\n   * for that worker as well as modify runtime environments in an async fashion.\n   * @param  {string} cid      capability id (e.g 0-0)\n   * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\n   * @param  {object} specs    specs to be run in the worker process\n   * @param  {object} args     object that will be merged with the main configuration once worker is initialized\n   * @param  {object} execArgv list of string arguments passed to the worker process\n   */\n  // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n  // },\n  /**\n   * Gets executed just after a worker process has exited.\n   * @param  {string} cid      capability id (e.g 0-0)\n   * @param  {number} exitCode 0 - success, 1 - fail\n   * @param  {object} specs    specs to be run in the worker process\n   * @param  {number} retries  number of retries used\n   */\n  // onWorkerEnd: function (cid, exitCode, specs, retries) {\n  // },\n  /**\n   * Gets executed just before initialising the webdriver session and test framework. It allows you\n   * to manipulate configurations depending on the capability or spec.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that are to be run\n   * @param {string} cid worker id (e.g. 0-0)\n   */\n  // beforeSession: function (config, capabilities, specs, cid) {\n  // },\n  /**\n   * Gets executed before test execution begins. At this point you can access to all global\n   * variables like `browser`. It is the perfect place to define custom commands.\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs        List of spec file paths that are to be run\n   * @param {object}         browser      instance of created browser/device session\n   */\n  // before: function (capabilities, specs) {\n  // },\n  /**\n   * Runs before a WebdriverIO command gets executed.\n   * @param {string} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   */\n  // beforeCommand: function (commandName, args) {\n  // },\n  /**\n   * Hook that gets executed before the suite starts\n   * @param {object} suite suite details\n   */\n  // beforeSuite: function (suite) {\n  // },\n  /**\n   * Function to be executed before a test (in Mocha/Jasmine) starts.\n   */\n  // beforeTest: function (test, context) {\n  // },\n  /**\n   * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n   * beforeEach in Mocha)\n   */\n  // beforeHook: function (test, context, hookName) {\n  // },\n  /**\n   * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n   * afterEach in Mocha)\n   */\n  // afterHook: function (test, context, { error, result, duration, passed, retries }, hookName) {\n  // },\n  /**\n   * Function to be executed after a test (in Mocha/Jasmine only)\n   * @param {object}  test             test object\n   * @param {object}  context          scope object the test was executed with\n   * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n   * @param {*}       result.result    return object of test function\n   * @param {number}  result.duration  duration of test\n   * @param {boolean} result.passed    true if test has passed, otherwise false\n   * @param {object}  result.retries   information about spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n   */\n  // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n  // },\n\n  /**\n   * Hook that gets executed after the suite has ended\n   * @param {object} suite suite details\n   */\n  // afterSuite: function (suite) {\n  // },\n  /**\n   * Runs after a WebdriverIO command gets executed\n   * @param {string} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   * @param {number} result 0 - command success, 1 - command error\n   * @param {object} error error object if any\n   */\n  // afterCommand: function (commandName, args, result, error) {\n  // },\n  /**\n   * Gets executed after all tests are done. You still have access to all global variables from\n   * the test.\n   * @param {number} result 0 - test pass, 1 - test fail\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // after: function (result, capabilities, specs) {\n  // },\n  /**\n   * Gets executed right after terminating the webdriver session.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // afterSession: function (config, capabilities, specs) {\n  // },\n  /**\n   * Gets executed after all workers got shut down and the process is about to exit. An error\n   * thrown in the onComplete hook will result in the test run failing.\n   * @param {object} exitCode 0 - success, 1 - fail\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {<Object>} results object containing test results\n   */\n  // onComplete: function(exitCode, config, capabilities, results) {\n  // },\n  /**\n  * Gets executed when a refresh happens.\n  * @param {string} oldSessionId session ID of the old session\n  * @param {string} newSessionId session ID of the new session\n  */\n  // onReload: function(oldSessionId, newSessionId) {\n  // }\n  /**\n  * Hook that gets executed before a WebdriverIO assertion happens.\n  * @param {object} params information about the assertion to be executed\n  */\n  // beforeAssertion: function(params) {\n  // }\n  /**\n  * Hook that gets executed after a WebdriverIO assertion happened.\n  * @param {object} params information about the assertion that was executed, including its results\n  */\n  // afterAssertion: function(params) {\n  // }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["exports","config","runner","port","path","specs","exclude","maxInstances","capabilities","platformName","logLevel","bail","baseUrl","waitforTimeout","connectionRetryTimeout","connectionRetryCount","services","args","address","framework","reporters","outputDir","fileName","reportTitle","showInBrowser","mochaOpts","ui","timeout"],"sourceRoot":"C:\\Users\\iput\\Downloads\\mobiletesting\\","sources":["wdio.conf.js"],"sourcesContent":["exports.config = {\n    //\n    // ====================\n    // Runner Configuration\n    // ====================\n    // WebdriverIO supports running e2e tests as well as unit and component tests.\n    runner: 'local',\n    port: 4729,\n    path: '/wd/hub',\n    //\n    // ==================\n    // Specify Test Files\n    // ==================\n    // Define which test specs should run. The pattern is relative to the directory\n    // of the configuration file being run.\n    //\n    // The specs are defined as an array of spec files (optionally using wildcards\n    // that will be expanded). The test for each spec file will be run in a separate\n    // worker process. In order to have a group of spec files run in the same worker\n    // process simply enclose them in an array within the specs array.\n    //\n    // The path of the spec files will be resolved relative from the directory of\n    // of the config file unless it's absolute.\n    //\n    specs: [\n        // ToDo: define location for spec files here\n        './test/specs/**/*.js'\n    ],\n    // Patterns to exclude.\n    exclude: [\n        // 'path/to/excluded/files'\n    ],\n    //\n    // ============\n    // Capabilities\n    // ============\n    // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n    // time. Depending on the number of capabilities, WebdriverIO launches several test\n    // sessions. Within your capabilities you can overwrite the spec and exclude options in\n    // order to group specific specs to a specific capability.\n    //\n    // First, you can define how many instances should be started at the same time. Let's\n    // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n    // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n    // files and you set maxInstances to 10, all spec files will get tested at the same time\n    // and 30 processes will get spawned. The property handles how many capabilities\n    // from the same test should run tests.\n    //\n    maxInstances: 10,\n    //\n    // If you have trouble getting all important capabilities together, check out the\n    // Sauce Labs platform configurator - a great tool to configure your capabilities:\n    // https://saucelabs.com/platform/platform-configurator\n    //\n    capabilities: [{\n        // capabilities for local Appium web tests on an Android Emulator\n        platformName: 'Android',\n        'appium:deviceName': 'vd-a13',\n        'appium:platformVersion': '13.0',\n        'appium:automationName': 'UiAutomator2',\n        'appium:appPackage': 'com.wdiodemoapp',\n        'appium:appActivity': 'com.wdiodemoapp.MainActivity',\n        'appium:app': 'C:/Users/iput/Downloads/mobiletesting/app/android.wdio.native.app.v1.0.8.apk'\n    }],\n\n    //\n    // ===================\n    // Test Configurations\n    // ===================\n    // Define all options that are relevant for the WebdriverIO instance here\n    //\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    logLevel: 'info',\n    //\n    // Set specific log levels per logger\n    // loggers:\n    // - webdriver, webdriverio\n    // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n    // - @wdio/mocha-framework, @wdio/jasmine-framework\n    // - @wdio/local-runner\n    // - @wdio/sumologic-reporter\n    // - @wdio/cli, @wdio/config, @wdio/utils\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    // logLevels: {\n    //     webdriver: 'info',\n    //     '@wdio/appium-service': 'info'\n    // },\n    //\n    // If you only want to run your tests until a specific amount of tests have failed use\n    // bail (default is 0 - don't bail, run all tests).\n    bail: 0,\n    //\n    // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n    // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n    // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n    // gets prepended directly.\n    baseUrl: 'http://localhost',\n    //\n    // Default timeout for all waitFor* commands.\n    waitforTimeout: 10000,\n    //\n    // Default timeout in milliseconds for request\n    // if browser driver or grid doesn't send response\n    connectionRetryTimeout: 120000,\n    //\n    // Default request retries count\n    connectionRetryCount: 3,\n    //\n    // Test runner services\n    // Services take over a specific job you don't want to take care of. They enhance\n    // your test setup with almost no effort. Unlike plugins, they don't add new\n    // commands. Instead, they hook themselves up into the test process.\n    services: [['appium', {\n        args: {\n            address: 'localhost',\n            port: 4729,\n            path: '/wd/hub'\n        },\n    }]],\n\n    // Framework you want to run your specs with.\n    // The following are supported: Mocha, Jasmine, and Cucumber\n    // see also: https://webdriver.io/docs/frameworks\n    //\n    // Make sure you have the wdio adapter package for the specific framework installed\n    // before running any tests.\n    framework: 'mocha',\n    \n    //\n    // The number of times to retry the entire specfile when it fails as a whole\n    // specFileRetries: 1,\n    //\n    // Delay in seconds between the spec file retry attempts\n    // specFileRetriesDelay: 0,\n    //\n    // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n    // specFileRetriesDeferred: false,\n    //\n    // Test reporter for stdout.\n    // The only one supported by default is 'dot'\n    // see also: https://webdriver.io/docs/dot-reporter\n    reporters: [\n    [\"html-nice\", {\n        outputDir: './reports/',\n        fileName: 'report.html',\n        reportTitle: 'Test Report',\n        //linkScreenshots: true,\n        showInBrowser: true,\n        //useOnAfterCommandForScreenshot: true,\n    }], 'spec'],\n\n    // Options to be passed to Mocha.\n    // See the full list at http://mochajs.org/\n    mochaOpts: {\n        ui: 'bdd',\n        timeout: 60000\n    },\n\n    //\n    // =====\n    // Hooks\n    // =====\n    // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n    // it and to build services around it. You can either apply a single function or an array of\n    // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n    // resolved to continue.\n    /**\n     * Gets executed once before all workers get launched.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     */\n    // onPrepare: function (config, capabilities) {\n    // },\n    /**\n     * Gets executed before a worker process is spawned and can be used to initialize specific service\n     * for that worker as well as modify runtime environments in an async fashion.\n     * @param  {string} cid      capability id (e.g 0-0)\n     * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\n     * @param  {object} specs    specs to be run in the worker process\n     * @param  {object} args     object that will be merged with the main configuration once worker is initialized\n     * @param  {object} execArgv list of string arguments passed to the worker process\n     */\n    // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n    // },\n    /**\n     * Gets executed just after a worker process has exited.\n     * @param  {string} cid      capability id (e.g 0-0)\n     * @param  {number} exitCode 0 - success, 1 - fail\n     * @param  {object} specs    specs to be run in the worker process\n     * @param  {number} retries  number of retries used\n     */\n    // onWorkerEnd: function (cid, exitCode, specs, retries) {\n    // },\n    /**\n     * Gets executed just before initialising the webdriver session and test framework. It allows you\n     * to manipulate configurations depending on the capability or spec.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that are to be run\n     * @param {string} cid worker id (e.g. 0-0)\n     */\n    // beforeSession: function (config, capabilities, specs, cid) {\n    // },\n    /**\n     * Gets executed before test execution begins. At this point you can access to all global\n     * variables like `browser`. It is the perfect place to define custom commands.\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs        List of spec file paths that are to be run\n     * @param {object}         browser      instance of created browser/device session\n     */\n    // before: function (capabilities, specs) {\n    // },\n    /**\n     * Runs before a WebdriverIO command gets executed.\n     * @param {string} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     */\n    // beforeCommand: function (commandName, args) {\n    // },\n    /**\n     * Hook that gets executed before the suite starts\n     * @param {object} suite suite details\n     */\n    // beforeSuite: function (suite) {\n    // },\n    /**\n     * Function to be executed before a test (in Mocha/Jasmine) starts.\n     */\n    // beforeTest: function (test, context) {\n    // },\n    /**\n     * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n     * beforeEach in Mocha)\n     */\n    // beforeHook: function (test, context, hookName) {\n    // },\n    /**\n     * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n     * afterEach in Mocha)\n     */\n    // afterHook: function (test, context, { error, result, duration, passed, retries }, hookName) {\n    // },\n    /**\n     * Function to be executed after a test (in Mocha/Jasmine only)\n     * @param {object}  test             test object\n     * @param {object}  context          scope object the test was executed with\n     * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n     * @param {*}       result.result    return object of test function\n     * @param {number}  result.duration  duration of test\n     * @param {boolean} result.passed    true if test has passed, otherwise false\n     * @param {object}  result.retries   information about spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n     */\n    // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n    // },\n\n\n    /**\n     * Hook that gets executed after the suite has ended\n     * @param {object} suite suite details\n     */\n    // afterSuite: function (suite) {\n    // },\n    /**\n     * Runs after a WebdriverIO command gets executed\n     * @param {string} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     * @param {number} result 0 - command success, 1 - command error\n     * @param {object} error error object if any\n     */\n    // afterCommand: function (commandName, args, result, error) {\n    // },\n    /**\n     * Gets executed after all tests are done. You still have access to all global variables from\n     * the test.\n     * @param {number} result 0 - test pass, 1 - test fail\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // after: function (result, capabilities, specs) {\n    // },\n    /**\n     * Gets executed right after terminating the webdriver session.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // afterSession: function (config, capabilities, specs) {\n    // },\n    /**\n     * Gets executed after all workers got shut down and the process is about to exit. An error\n     * thrown in the onComplete hook will result in the test run failing.\n     * @param {object} exitCode 0 - success, 1 - fail\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {<Object>} results object containing test results\n     */\n    // onComplete: function(exitCode, config, capabilities, results) {\n    // },\n    /**\n    * Gets executed when a refresh happens.\n    * @param {string} oldSessionId session ID of the old session\n    * @param {string} newSessionId session ID of the new session\n    */\n    // onReload: function(oldSessionId, newSessionId) {\n    // }\n    /**\n    * Hook that gets executed before a WebdriverIO assertion happens.\n    * @param {object} params information about the assertion to be executed\n    */\n    // beforeAssertion: function(params) {\n    // }\n    /**\n    * Hook that gets executed after a WebdriverIO assertion happened.\n    * @param {object} params information about the assertion that was executed, including its results\n    */\n    // afterAssertion: function(params) {\n    // }\n}\n"],"mappings":"AAAAA,OAAO,CAACC,MAAM,GAAG;EACb;EACA;EACA;EACA;EACA;EACAC,MAAM,EAAE,OAAO;EACfC,IAAI,EAAE,IAAI;EACVC,IAAI,EAAE,SAAS;EACf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,KAAK,EAAE;EACH;EACA,sBAAsB,CACzB;EACD;EACAC,OAAO,EAAE;IACL;EAAA,CACH;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,EAAE;EAChB;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,CAAC;IACX;IACAC,YAAY,EAAE,SAAS;IACvB,mBAAmB,EAAE,QAAQ;IAC7B,wBAAwB,EAAE,MAAM;IAChC,uBAAuB,EAAE,cAAc;IACvC,mBAAmB,EAAE,iBAAiB;IACtC,oBAAoB,EAAE,8BAA8B;IACpD,YAAY,EAAE;EAClB,CAAC,CAAC;EAEF;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,QAAQ,EAAE,MAAM;EAChB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,IAAI,EAAE,CAAC;EACP;EACA;EACA;EACA;EACA;EACAC,OAAO,EAAE,kBAAkB;EAC3B;EACA;EACAC,cAAc,EAAE,KAAK;EACrB;EACA;EACA;EACAC,sBAAsB,EAAE,MAAM;EAC9B;EACA;EACAC,oBAAoB,EAAE,CAAC;EACvB;EACA;EACA;EACA;EACA;EACAC,QAAQ,EAAE,CAAC,CAAC,QAAQ,EAAE;IAClBC,IAAI,EAAE;MACFC,OAAO,EAAE,WAAW;MACpBf,IAAI,EAAE,IAAI;MACVC,IAAI,EAAE;IACV;EACJ,CAAC,CAAC,CAAC;EAEH;EACA;EACA;EACA;EACA;EACA;EACAe,SAAS,EAAE,OAAO;EAElB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,CACX,CAAC,WAAW,EAAE;IACVC,SAAS,EAAE,YAAY;IACvBC,QAAQ,EAAE,aAAa;IACvBC,WAAW,EAAE,aAAa;IAC1B;IACAC,aAAa,EAAE;IACf;EACJ,CAAC,CAAC,EAAE,MAAM,CAAC;EAEX;EACA;EACAC,SAAS,EAAE;IACPC,EAAE,EAAE,KAAK;IACTC,OAAO,EAAE;EACb;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EAGA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;AACJ,CAAC","ignoreList":[]}},"mtime":1717237360568},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\iput\\\\Downloads\\\\mobiletesting\\\\test\\\\specs\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\iput\\\\Downloads\\\\mobiletesting\",\"filename\":\"C:\\\\Users\\\\iput\\\\Downloads\\\\mobiletesting\\\\test\\\\specs\\\\coba.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\iput\\\\Downloads\\\\mobiletesting\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.6:test":{"value":{"code":"//const { expect } = require(\"expect-webdriverio\");\n\ndescribe('Mobile testing - LOGIN', () => {\n  before(async () => {\n    //cek elemen homescreen muncul dengan menggunakan xpath\n    const homeScreen = await $('//android.widget.ScrollView[@content-desc=\"Home-screen\"]');\n    await expect(homeScreen).toBeExisting();\n\n    //klik menu login menggunakan accessibility id\n    await $('~Login').click();\n\n    //cek elemen untuk memastikan berada di login page\n    const loginPage = await $('//android.view.ViewGroup[@content-desc=\"button-login-container\"]');\n    expect(loginPage).toHaveText(\"Login\");\n    await driver.pause(2000);\n  });\n  it('Login with valid data - POSITIVE', async () => {\n    //mengakses field email dan memasukkan value ke dalamnya\n    const emailField = await $('~input-email');\n    await emailField.setValue(\"lala@mail.co\");\n\n    //mengakses field password dan memasukkan value ke dalamnya\n    const passwordField = await $('~input-password');\n    await passwordField.setValue(\"Lala.1234\");\n\n    //klik tombol login\n    const buttonLogin = await $('~button-LOGIN');\n    await buttonLogin.click();\n    await driver.pause(2000);\n\n    //cek muncul popup berhasil login\n    const successTitle = await $('//android.widget.TextView[@resource-id=\"android:id/alertTitle\"]');\n    const successMessage = await $('//android.widget.TextView[@resource-id=\"android:id/message\"]');\n    await expect(successTitle).toHaveText(\"Success\");\n    await expect(successMessage).toBeExisting();\n    await expect(successMessage).toHaveText(\"You are logged in!\");\n\n    //klik \"Ok\" untuk menutup popup\n    await $('//android.widget.Button[@resource-id=\"android:id/button1\"]').click();\n  });\n  it('Fail to login with invalid email format - NEGATIVE', async () => {\n    //mengakses field email dan memasukkan value ke dalamnya\n    await $('~input-email').setValue(\"lala\");\n\n    //mengakses field password dan memasukkan value ke dalamnya\n    await $('~input-password').setValue(\"Lala.1234\");\n\n    //klik tombol login\n    await $('~button-LOGIN').click();\n\n    //cek muncul alert email tidak valid\n    const invalidEmail = await $('//android.widget.TextView[@text=\"Please enter a valid email address\"]');\n    await expect(invalidEmail).toBeExisting();\n    await expect(invalidEmail).toHaveText(\"Please enter a valid email address\");\n    await driver.pause(2000);\n  });\n  it('Fail to login with less than 8 chars password - NEGATIVE', async () => {\n    //mengakses field email dan memasukkan value ke dalamnya\n    await $('~input-email').setValue(\"lala@mail.co\");\n\n    //mengakses field password dan memasukkan value ke dalamnya\n    await $('~input-password').setValue(\"Lala\");\n\n    //klik tombol login\n    await $('~button-LOGIN').click();\n\n    //cek muncul alert password minimal 8 karakter\n    const invalidPassword = await $('//android.widget.TextView[@text=\"Please enter at least 8 characters\"]');\n    await expect(invalidPassword).toBeExisting();\n    await expect(invalidPassword).toHaveText(\"Please enter at least 8 characters\");\n    await driver.pause(2000);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJkZXNjcmliZSIsImJlZm9yZSIsImhvbWVTY3JlZW4iLCIkIiwiZXhwZWN0IiwidG9CZUV4aXN0aW5nIiwiY2xpY2siLCJsb2dpblBhZ2UiLCJ0b0hhdmVUZXh0IiwiZHJpdmVyIiwicGF1c2UiLCJpdCIsImVtYWlsRmllbGQiLCJzZXRWYWx1ZSIsInBhc3N3b3JkRmllbGQiLCJidXR0b25Mb2dpbiIsInN1Y2Nlc3NUaXRsZSIsInN1Y2Nlc3NNZXNzYWdlIiwiaW52YWxpZEVtYWlsIiwiaW52YWxpZFBhc3N3b3JkIl0sInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGlwdXRcXERvd25sb2Fkc1xcbW9iaWxldGVzdGluZ1xcdGVzdFxcc3BlY3NcXCIsInNvdXJjZXMiOlsiY29iYS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvL2NvbnN0IHsgZXhwZWN0IH0gPSByZXF1aXJlKFwiZXhwZWN0LXdlYmRyaXZlcmlvXCIpO1xyXG5cclxuZGVzY3JpYmUoJ01vYmlsZSB0ZXN0aW5nIC0gTE9HSU4nLCAoKSA9PiB7XHJcbiAgICBiZWZvcmUoIGFzeW5jKCkgPT4ge1xyXG4gICAgICAgIC8vY2VrIGVsZW1lbiBob21lc2NyZWVuIG11bmN1bCBkZW5nYW4gbWVuZ2d1bmFrYW4geHBhdGhcclxuICAgICAgICBjb25zdCBob21lU2NyZWVuPSBhd2FpdCAkKCcvL2FuZHJvaWQud2lkZ2V0LlNjcm9sbFZpZXdbQGNvbnRlbnQtZGVzYz1cIkhvbWUtc2NyZWVuXCJdJyk7XHJcbiAgICAgICAgYXdhaXQgZXhwZWN0KGhvbWVTY3JlZW4pLnRvQmVFeGlzdGluZygpO1xyXG5cclxuICAgICAgICAvL2tsaWsgbWVudSBsb2dpbiBtZW5nZ3VuYWthbiBhY2Nlc3NpYmlsaXR5IGlkXHJcbiAgICAgICAgYXdhaXQgJCgnfkxvZ2luJykuY2xpY2soKTtcclxuXHJcbiAgICAgICAgLy9jZWsgZWxlbWVuIHVudHVrIG1lbWFzdGlrYW4gYmVyYWRhIGRpIGxvZ2luIHBhZ2VcclxuICAgICAgICBjb25zdCBsb2dpblBhZ2UgPSBhd2FpdCAkKCcvL2FuZHJvaWQudmlldy5WaWV3R3JvdXBbQGNvbnRlbnQtZGVzYz1cImJ1dHRvbi1sb2dpbi1jb250YWluZXJcIl0nKTtcclxuICAgICAgICBleHBlY3QobG9naW5QYWdlKS50b0hhdmVUZXh0KFwiTG9naW5cIik7XHJcblxyXG4gICAgICAgIGF3YWl0IGRyaXZlci5wYXVzZSgyMDAwKTtcclxuICAgICAgfSk7XHJcblxyXG4gICAgaXQoJ0xvZ2luIHdpdGggdmFsaWQgZGF0YSAtIFBPU0lUSVZFJywgYXN5bmMgKCkgPT4ge1xyXG4gICAgICAgIC8vbWVuZ2Frc2VzIGZpZWxkIGVtYWlsIGRhbiBtZW1hc3Vra2FuIHZhbHVlIGtlIGRhbGFtbnlhXHJcbiAgICAgICAgY29uc3QgZW1haWxGaWVsZCA9IGF3YWl0ICQoJ35pbnB1dC1lbWFpbCcpO1xyXG4gICAgICAgIGF3YWl0IGVtYWlsRmllbGQuc2V0VmFsdWUoXCJsYWxhQG1haWwuY29cIik7XHJcblxyXG4gICAgICAgIC8vbWVuZ2Frc2VzIGZpZWxkIHBhc3N3b3JkIGRhbiBtZW1hc3Vra2FuIHZhbHVlIGtlIGRhbGFtbnlhXHJcbiAgICAgICAgY29uc3QgcGFzc3dvcmRGaWVsZCA9IGF3YWl0ICQoJ35pbnB1dC1wYXNzd29yZCcpO1xyXG4gICAgICAgIGF3YWl0IHBhc3N3b3JkRmllbGQuc2V0VmFsdWUoXCJMYWxhLjEyMzRcIik7XHJcblxyXG4gICAgICAgIC8va2xpayB0b21ib2wgbG9naW5cclxuICAgICAgICBjb25zdCBidXR0b25Mb2dpbiA9IGF3YWl0ICQoJ35idXR0b24tTE9HSU4nKTtcclxuICAgICAgICBhd2FpdCBidXR0b25Mb2dpbi5jbGljaygpO1xyXG5cclxuICAgICAgICBhd2FpdCBkcml2ZXIucGF1c2UoMjAwMCk7XHJcblxyXG4gICAgICAgIC8vY2VrIG11bmN1bCBwb3B1cCBiZXJoYXNpbCBsb2dpblxyXG4gICAgICAgIGNvbnN0IHN1Y2Nlc3NUaXRsZSA9IGF3YWl0ICQoJy8vYW5kcm9pZC53aWRnZXQuVGV4dFZpZXdbQHJlc291cmNlLWlkPVwiYW5kcm9pZDppZC9hbGVydFRpdGxlXCJdJylcclxuICAgICAgICBjb25zdCBzdWNjZXNzTWVzc2FnZSA9IGF3YWl0ICQoJy8vYW5kcm9pZC53aWRnZXQuVGV4dFZpZXdbQHJlc291cmNlLWlkPVwiYW5kcm9pZDppZC9tZXNzYWdlXCJdJylcclxuICAgICAgICBhd2FpdCBleHBlY3Qoc3VjY2Vzc1RpdGxlKS50b0hhdmVUZXh0KFwiU3VjY2Vzc1wiKTtcclxuICAgICAgICBhd2FpdCBleHBlY3Qoc3VjY2Vzc01lc3NhZ2UpLnRvQmVFeGlzdGluZygpO1xyXG4gICAgICAgIGF3YWl0IGV4cGVjdChzdWNjZXNzTWVzc2FnZSkudG9IYXZlVGV4dChcIllvdSBhcmUgbG9nZ2VkIGluIVwiKTtcclxuXHJcbiAgICAgICAgLy9rbGlrIFwiT2tcIiB1bnR1ayBtZW51dHVwIHBvcHVwXHJcbiAgICAgICAgYXdhaXQgJCgnLy9hbmRyb2lkLndpZGdldC5CdXR0b25bQHJlc291cmNlLWlkPVwiYW5kcm9pZDppZC9idXR0b24xXCJdJykuY2xpY2soKTtcclxuICAgIH0pXHJcblxyXG4gICAgaXQoJ0ZhaWwgdG8gbG9naW4gd2l0aCBpbnZhbGlkIGVtYWlsIGZvcm1hdCAtIE5FR0FUSVZFJywgYXN5bmMgKCkgPT4ge1xyXG4gICAgICAgIC8vbWVuZ2Frc2VzIGZpZWxkIGVtYWlsIGRhbiBtZW1hc3Vra2FuIHZhbHVlIGtlIGRhbGFtbnlhXHJcbiAgICAgICAgYXdhaXQgJCgnfmlucHV0LWVtYWlsJykuc2V0VmFsdWUoXCJsYWxhXCIpO1xyXG5cclxuICAgICAgICAvL21lbmdha3NlcyBmaWVsZCBwYXNzd29yZCBkYW4gbWVtYXN1a2thbiB2YWx1ZSBrZSBkYWxhbW55YVxyXG4gICAgICAgIGF3YWl0ICQoJ35pbnB1dC1wYXNzd29yZCcpLnNldFZhbHVlKFwiTGFsYS4xMjM0XCIpO1xyXG5cclxuICAgICAgICAvL2tsaWsgdG9tYm9sIGxvZ2luXHJcbiAgICAgICAgYXdhaXQgJCgnfmJ1dHRvbi1MT0dJTicpLmNsaWNrKCk7XHJcblxyXG4gICAgICAgIC8vY2VrIG11bmN1bCBhbGVydCBlbWFpbCB0aWRhayB2YWxpZFxyXG4gICAgICAgIGNvbnN0IGludmFsaWRFbWFpbCA9IGF3YWl0ICQoJy8vYW5kcm9pZC53aWRnZXQuVGV4dFZpZXdbQHRleHQ9XCJQbGVhc2UgZW50ZXIgYSB2YWxpZCBlbWFpbCBhZGRyZXNzXCJdJyk7XHJcbiAgICAgICAgYXdhaXQgZXhwZWN0KGludmFsaWRFbWFpbCkudG9CZUV4aXN0aW5nKCk7XHJcbiAgICAgICAgYXdhaXQgZXhwZWN0KGludmFsaWRFbWFpbCkudG9IYXZlVGV4dChcIlBsZWFzZSBlbnRlciBhIHZhbGlkIGVtYWlsIGFkZHJlc3NcIik7XHJcblxyXG4gICAgICAgIGF3YWl0IGRyaXZlci5wYXVzZSgyMDAwKTtcclxuICAgIH0pXHJcblxyXG4gICAgaXQoJ0ZhaWwgdG8gbG9naW4gd2l0aCBsZXNzIHRoYW4gOCBjaGFycyBwYXNzd29yZCAtIE5FR0FUSVZFJywgYXN5bmMgKCkgPT4ge1xyXG4gICAgICAgIC8vbWVuZ2Frc2VzIGZpZWxkIGVtYWlsIGRhbiBtZW1hc3Vra2FuIHZhbHVlIGtlIGRhbGFtbnlhXHJcbiAgICAgICAgYXdhaXQgJCgnfmlucHV0LWVtYWlsJykuc2V0VmFsdWUoXCJsYWxhQG1haWwuY29cIik7XHJcblxyXG4gICAgICAgIC8vbWVuZ2Frc2VzIGZpZWxkIHBhc3N3b3JkIGRhbiBtZW1hc3Vra2FuIHZhbHVlIGtlIGRhbGFtbnlhXHJcbiAgICAgICAgYXdhaXQgJCgnfmlucHV0LXBhc3N3b3JkJykuc2V0VmFsdWUoXCJMYWxhXCIpO1xyXG5cclxuICAgICAgICAvL2tsaWsgdG9tYm9sIGxvZ2luXHJcbiAgICAgICAgYXdhaXQgJCgnfmJ1dHRvbi1MT0dJTicpLmNsaWNrKCk7XHJcblxyXG4gICAgICAgIC8vY2VrIG11bmN1bCBhbGVydCBwYXNzd29yZCBtaW5pbWFsIDgga2FyYWt0ZXJcclxuICAgICAgICBjb25zdCBpbnZhbGlkUGFzc3dvcmQgPSBhd2FpdCAkKCcvL2FuZHJvaWQud2lkZ2V0LlRleHRWaWV3W0B0ZXh0PVwiUGxlYXNlIGVudGVyIGF0IGxlYXN0IDggY2hhcmFjdGVyc1wiXScpO1xyXG4gICAgICAgIGF3YWl0IGV4cGVjdChpbnZhbGlkUGFzc3dvcmQpLnRvQmVFeGlzdGluZygpO1xyXG4gICAgICAgIGF3YWl0IGV4cGVjdChpbnZhbGlkUGFzc3dvcmQpLnRvSGF2ZVRleHQoXCJQbGVhc2UgZW50ZXIgYXQgbGVhc3QgOCBjaGFyYWN0ZXJzXCIpO1xyXG5cclxuICAgICAgICBhd2FpdCBkcml2ZXIucGF1c2UoMjAwMCk7XHJcbiAgICB9KVxyXG59KSJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUFBLFFBQVEsQ0FBQyx3QkFBd0IsRUFBRSxNQUFNO0VBQ3JDQyxNQUFNLENBQUUsWUFBVztJQUNmO0lBQ0EsTUFBTUMsVUFBVSxHQUFFLE1BQU1DLENBQUMsQ0FBQywwREFBMEQsQ0FBQztJQUNyRixNQUFNQyxNQUFNLENBQUNGLFVBQVUsQ0FBQyxDQUFDRyxZQUFZLENBQUMsQ0FBQzs7SUFFdkM7SUFDQSxNQUFNRixDQUFDLENBQUMsUUFBUSxDQUFDLENBQUNHLEtBQUssQ0FBQyxDQUFDOztJQUV6QjtJQUNBLE1BQU1DLFNBQVMsR0FBRyxNQUFNSixDQUFDLENBQUMsa0VBQWtFLENBQUM7SUFDN0ZDLE1BQU0sQ0FBQ0csU0FBUyxDQUFDLENBQUNDLFVBQVUsQ0FBQyxPQUFPLENBQUM7SUFFckMsTUFBTUMsTUFBTSxDQUFDQyxLQUFLLENBQUMsSUFBSSxDQUFDO0VBQzFCLENBQUMsQ0FBQztFQUVKQyxFQUFFLENBQUMsa0NBQWtDLEVBQUUsWUFBWTtJQUMvQztJQUNBLE1BQU1DLFVBQVUsR0FBRyxNQUFNVCxDQUFDLENBQUMsY0FBYyxDQUFDO0lBQzFDLE1BQU1TLFVBQVUsQ0FBQ0MsUUFBUSxDQUFDLGNBQWMsQ0FBQzs7SUFFekM7SUFDQSxNQUFNQyxhQUFhLEdBQUcsTUFBTVgsQ0FBQyxDQUFDLGlCQUFpQixDQUFDO0lBQ2hELE1BQU1XLGFBQWEsQ0FBQ0QsUUFBUSxDQUFDLFdBQVcsQ0FBQzs7SUFFekM7SUFDQSxNQUFNRSxXQUFXLEdBQUcsTUFBTVosQ0FBQyxDQUFDLGVBQWUsQ0FBQztJQUM1QyxNQUFNWSxXQUFXLENBQUNULEtBQUssQ0FBQyxDQUFDO0lBRXpCLE1BQU1HLE1BQU0sQ0FBQ0MsS0FBSyxDQUFDLElBQUksQ0FBQzs7SUFFeEI7SUFDQSxNQUFNTSxZQUFZLEdBQUcsTUFBTWIsQ0FBQyxDQUFDLGlFQUFpRSxDQUFDO0lBQy9GLE1BQU1jLGNBQWMsR0FBRyxNQUFNZCxDQUFDLENBQUMsOERBQThELENBQUM7SUFDOUYsTUFBTUMsTUFBTSxDQUFDWSxZQUFZLENBQUMsQ0FBQ1IsVUFBVSxDQUFDLFNBQVMsQ0FBQztJQUNoRCxNQUFNSixNQUFNLENBQUNhLGNBQWMsQ0FBQyxDQUFDWixZQUFZLENBQUMsQ0FBQztJQUMzQyxNQUFNRCxNQUFNLENBQUNhLGNBQWMsQ0FBQyxDQUFDVCxVQUFVLENBQUMsb0JBQW9CLENBQUM7O0lBRTdEO0lBQ0EsTUFBTUwsQ0FBQyxDQUFDLDREQUE0RCxDQUFDLENBQUNHLEtBQUssQ0FBQyxDQUFDO0VBQ2pGLENBQUMsQ0FBQztFQUVGSyxFQUFFLENBQUMsb0RBQW9ELEVBQUUsWUFBWTtJQUNqRTtJQUNBLE1BQU1SLENBQUMsQ0FBQyxjQUFjLENBQUMsQ0FBQ1UsUUFBUSxDQUFDLE1BQU0sQ0FBQzs7SUFFeEM7SUFDQSxNQUFNVixDQUFDLENBQUMsaUJBQWlCLENBQUMsQ0FBQ1UsUUFBUSxDQUFDLFdBQVcsQ0FBQzs7SUFFaEQ7SUFDQSxNQUFNVixDQUFDLENBQUMsZUFBZSxDQUFDLENBQUNHLEtBQUssQ0FBQyxDQUFDOztJQUVoQztJQUNBLE1BQU1ZLFlBQVksR0FBRyxNQUFNZixDQUFDLENBQUMsdUVBQXVFLENBQUM7SUFDckcsTUFBTUMsTUFBTSxDQUFDYyxZQUFZLENBQUMsQ0FBQ2IsWUFBWSxDQUFDLENBQUM7SUFDekMsTUFBTUQsTUFBTSxDQUFDYyxZQUFZLENBQUMsQ0FBQ1YsVUFBVSxDQUFDLG9DQUFvQyxDQUFDO0lBRTNFLE1BQU1DLE1BQU0sQ0FBQ0MsS0FBSyxDQUFDLElBQUksQ0FBQztFQUM1QixDQUFDLENBQUM7RUFFRkMsRUFBRSxDQUFDLDBEQUEwRCxFQUFFLFlBQVk7SUFDdkU7SUFDQSxNQUFNUixDQUFDLENBQUMsY0FBYyxDQUFDLENBQUNVLFFBQVEsQ0FBQyxjQUFjLENBQUM7O0lBRWhEO0lBQ0EsTUFBTVYsQ0FBQyxDQUFDLGlCQUFpQixDQUFDLENBQUNVLFFBQVEsQ0FBQyxNQUFNLENBQUM7O0lBRTNDO0lBQ0EsTUFBTVYsQ0FBQyxDQUFDLGVBQWUsQ0FBQyxDQUFDRyxLQUFLLENBQUMsQ0FBQzs7SUFFaEM7SUFDQSxNQUFNYSxlQUFlLEdBQUcsTUFBTWhCLENBQUMsQ0FBQyx1RUFBdUUsQ0FBQztJQUN4RyxNQUFNQyxNQUFNLENBQUNlLGVBQWUsQ0FBQyxDQUFDZCxZQUFZLENBQUMsQ0FBQztJQUM1QyxNQUFNRCxNQUFNLENBQUNlLGVBQWUsQ0FBQyxDQUFDWCxVQUFVLENBQUMsb0NBQW9DLENBQUM7SUFFOUUsTUFBTUMsTUFBTSxDQUFDQyxLQUFLLENBQUMsSUFBSSxDQUFDO0VBQzVCLENBQUMsQ0FBQztBQUNOLENBQUMsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==","map":{"version":3,"names":["describe","before","homeScreen","$","expect","toBeExisting","click","loginPage","toHaveText","driver","pause","it","emailField","setValue","passwordField","buttonLogin","successTitle","successMessage","invalidEmail","invalidPassword"],"sourceRoot":"C:\\Users\\iput\\Downloads\\mobiletesting\\test\\specs\\","sources":["coba.js"],"sourcesContent":["//const { expect } = require(\"expect-webdriverio\");\r\n\r\ndescribe('Mobile testing - LOGIN', () => {\r\n    before( async() => {\r\n        //cek elemen homescreen muncul dengan menggunakan xpath\r\n        const homeScreen= await $('//android.widget.ScrollView[@content-desc=\"Home-screen\"]');\r\n        await expect(homeScreen).toBeExisting();\r\n\r\n        //klik menu login menggunakan accessibility id\r\n        await $('~Login').click();\r\n\r\n        //cek elemen untuk memastikan berada di login page\r\n        const loginPage = await $('//android.view.ViewGroup[@content-desc=\"button-login-container\"]');\r\n        expect(loginPage).toHaveText(\"Login\");\r\n\r\n        await driver.pause(2000);\r\n      });\r\n\r\n    it('Login with valid data - POSITIVE', async () => {\r\n        //mengakses field email dan memasukkan value ke dalamnya\r\n        const emailField = await $('~input-email');\r\n        await emailField.setValue(\"lala@mail.co\");\r\n\r\n        //mengakses field password dan memasukkan value ke dalamnya\r\n        const passwordField = await $('~input-password');\r\n        await passwordField.setValue(\"Lala.1234\");\r\n\r\n        //klik tombol login\r\n        const buttonLogin = await $('~button-LOGIN');\r\n        await buttonLogin.click();\r\n\r\n        await driver.pause(2000);\r\n\r\n        //cek muncul popup berhasil login\r\n        const successTitle = await $('//android.widget.TextView[@resource-id=\"android:id/alertTitle\"]')\r\n        const successMessage = await $('//android.widget.TextView[@resource-id=\"android:id/message\"]')\r\n        await expect(successTitle).toHaveText(\"Success\");\r\n        await expect(successMessage).toBeExisting();\r\n        await expect(successMessage).toHaveText(\"You are logged in!\");\r\n\r\n        //klik \"Ok\" untuk menutup popup\r\n        await $('//android.widget.Button[@resource-id=\"android:id/button1\"]').click();\r\n    })\r\n\r\n    it('Fail to login with invalid email format - NEGATIVE', async () => {\r\n        //mengakses field email dan memasukkan value ke dalamnya\r\n        await $('~input-email').setValue(\"lala\");\r\n\r\n        //mengakses field password dan memasukkan value ke dalamnya\r\n        await $('~input-password').setValue(\"Lala.1234\");\r\n\r\n        //klik tombol login\r\n        await $('~button-LOGIN').click();\r\n\r\n        //cek muncul alert email tidak valid\r\n        const invalidEmail = await $('//android.widget.TextView[@text=\"Please enter a valid email address\"]');\r\n        await expect(invalidEmail).toBeExisting();\r\n        await expect(invalidEmail).toHaveText(\"Please enter a valid email address\");\r\n\r\n        await driver.pause(2000);\r\n    })\r\n\r\n    it('Fail to login with less than 8 chars password - NEGATIVE', async () => {\r\n        //mengakses field email dan memasukkan value ke dalamnya\r\n        await $('~input-email').setValue(\"lala@mail.co\");\r\n\r\n        //mengakses field password dan memasukkan value ke dalamnya\r\n        await $('~input-password').setValue(\"Lala\");\r\n\r\n        //klik tombol login\r\n        await $('~button-LOGIN').click();\r\n\r\n        //cek muncul alert password minimal 8 karakter\r\n        const invalidPassword = await $('//android.widget.TextView[@text=\"Please enter at least 8 characters\"]');\r\n        await expect(invalidPassword).toBeExisting();\r\n        await expect(invalidPassword).toHaveText(\"Please enter at least 8 characters\");\r\n\r\n        await driver.pause(2000);\r\n    })\r\n})"],"mappings":"AAAA;;AAEAA,QAAQ,CAAC,wBAAwB,EAAE,MAAM;EACrCC,MAAM,CAAE,YAAW;IACf;IACA,MAAMC,UAAU,GAAE,MAAMC,CAAC,CAAC,0DAA0D,CAAC;IACrF,MAAMC,MAAM,CAACF,UAAU,CAAC,CAACG,YAAY,CAAC,CAAC;;IAEvC;IACA,MAAMF,CAAC,CAAC,QAAQ,CAAC,CAACG,KAAK,CAAC,CAAC;;IAEzB;IACA,MAAMC,SAAS,GAAG,MAAMJ,CAAC,CAAC,kEAAkE,CAAC;IAC7FC,MAAM,CAACG,SAAS,CAAC,CAACC,UAAU,CAAC,OAAO,CAAC;IAErC,MAAMC,MAAM,CAACC,KAAK,CAAC,IAAI,CAAC;EAC1B,CAAC,CAAC;EAEJC,EAAE,CAAC,kCAAkC,EAAE,YAAY;IAC/C;IACA,MAAMC,UAAU,GAAG,MAAMT,CAAC,CAAC,cAAc,CAAC;IAC1C,MAAMS,UAAU,CAACC,QAAQ,CAAC,cAAc,CAAC;;IAEzC;IACA,MAAMC,aAAa,GAAG,MAAMX,CAAC,CAAC,iBAAiB,CAAC;IAChD,MAAMW,aAAa,CAACD,QAAQ,CAAC,WAAW,CAAC;;IAEzC;IACA,MAAME,WAAW,GAAG,MAAMZ,CAAC,CAAC,eAAe,CAAC;IAC5C,MAAMY,WAAW,CAACT,KAAK,CAAC,CAAC;IAEzB,MAAMG,MAAM,CAACC,KAAK,CAAC,IAAI,CAAC;;IAExB;IACA,MAAMM,YAAY,GAAG,MAAMb,CAAC,CAAC,iEAAiE,CAAC;IAC/F,MAAMc,cAAc,GAAG,MAAMd,CAAC,CAAC,8DAA8D,CAAC;IAC9F,MAAMC,MAAM,CAACY,YAAY,CAAC,CAACR,UAAU,CAAC,SAAS,CAAC;IAChD,MAAMJ,MAAM,CAACa,cAAc,CAAC,CAACZ,YAAY,CAAC,CAAC;IAC3C,MAAMD,MAAM,CAACa,cAAc,CAAC,CAACT,UAAU,CAAC,oBAAoB,CAAC;;IAE7D;IACA,MAAML,CAAC,CAAC,4DAA4D,CAAC,CAACG,KAAK,CAAC,CAAC;EACjF,CAAC,CAAC;EAEFK,EAAE,CAAC,oDAAoD,EAAE,YAAY;IACjE;IACA,MAAMR,CAAC,CAAC,cAAc,CAAC,CAACU,QAAQ,CAAC,MAAM,CAAC;;IAExC;IACA,MAAMV,CAAC,CAAC,iBAAiB,CAAC,CAACU,QAAQ,CAAC,WAAW,CAAC;;IAEhD;IACA,MAAMV,CAAC,CAAC,eAAe,CAAC,CAACG,KAAK,CAAC,CAAC;;IAEhC;IACA,MAAMY,YAAY,GAAG,MAAMf,CAAC,CAAC,uEAAuE,CAAC;IACrG,MAAMC,MAAM,CAACc,YAAY,CAAC,CAACb,YAAY,CAAC,CAAC;IACzC,MAAMD,MAAM,CAACc,YAAY,CAAC,CAACV,UAAU,CAAC,oCAAoC,CAAC;IAE3E,MAAMC,MAAM,CAACC,KAAK,CAAC,IAAI,CAAC;EAC5B,CAAC,CAAC;EAEFC,EAAE,CAAC,0DAA0D,EAAE,YAAY;IACvE;IACA,MAAMR,CAAC,CAAC,cAAc,CAAC,CAACU,QAAQ,CAAC,cAAc,CAAC;;IAEhD;IACA,MAAMV,CAAC,CAAC,iBAAiB,CAAC,CAACU,QAAQ,CAAC,MAAM,CAAC;;IAE3C;IACA,MAAMV,CAAC,CAAC,eAAe,CAAC,CAACG,KAAK,CAAC,CAAC;;IAEhC;IACA,MAAMa,eAAe,GAAG,MAAMhB,CAAC,CAAC,uEAAuE,CAAC;IACxG,MAAMC,MAAM,CAACe,eAAe,CAAC,CAACd,YAAY,CAAC,CAAC;IAC5C,MAAMD,MAAM,CAACe,eAAe,CAAC,CAACX,UAAU,CAAC,oCAAoC,CAAC;IAE9E,MAAMC,MAAM,CAACC,KAAK,CAAC,IAAI,CAAC;EAC5B,CAAC,CAAC;AACN,CAAC,CAAC","ignoreList":[]}},"mtime":1717237586005},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\iput\\\\Downloads\\\\mobiletesting\\\\test\\\\specs\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\iput\\\\Downloads\\\\mobiletesting\",\"filename\":\"C:\\\\Users\\\\iput\\\\Downloads\\\\mobiletesting\\\\test\\\\specs\\\\loginTest.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\iput\\\\Downloads\\\\mobiletesting\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.6:test":{"value":{"code":"describe('Mobile testing - LOGIN', () => {\n  before(async () => {\n    //cek elemen homescreen muncul dengan menggunakan xpath\n    const homeScreen = await $('//android.widget.ScrollView[@content-desc=\"Home-screen\"]');\n    await expect(homeScreen).toBeDisplayed();\n\n    //klik menu login menggunakan accessibility id\n    await $('~Login').click();\n\n    //cek elemen untuk memastikan berada di halaman login\n    const loginPage = await $('//android.view.ViewGroup[@content-desc=\"button-login-container\"]').getText();\n    await expect(loginPage == \"LOGIN\");\n    await driver.pause(2000);\n  });\n  it('Login with valid data - POSITIVE', async () => {\n    //mengakses field email dan memasukkan value ke dalamnya\n    const emailField = await $('~input-email');\n    await emailField.setValue(\"lala@mail.co\");\n\n    //mengakses field password dan memasukkan value ke dalamnya\n    const passwordField = await $('~input-password');\n    await passwordField.setValue(\"Lala.1234\");\n\n    //klik tombol login\n    const buttonLogin = await $('~button-LOGIN');\n    await buttonLogin.click();\n\n    //cek muncul popup berhasil login\n    const successTitle = await $('//android.widget.TextView[@resource-id=\"android:id/alertTitle\"]');\n    const successMessage = await $('//android.widget.TextView[@resource-id=\"android:id/message\"]');\n    await expect(successTitle).toHaveText(\"Success\");\n    await expect(successMessage).toBeExisting();\n    await expect(successMessage).toHaveText(\"You are logged in!\");\n\n    //klik \"Ok\" untuk menutup popup\n    await $('//android.widget.Button[@resource-id=\"android:id/button1\"]').click();\n  });\n  it('Fail to login with invalid email format - NEGATIVE', async () => {\n    //mengakses field email dan memasukkan value ke dalamnya\n    await $('~input-email').setValue(\"lala\");\n\n    //mengakses field password dan memasukkan value ke dalamnya\n    await $('~input-password').setValue(\"Lala.1234\");\n\n    //klik tombol login\n    await $('~button-LOGIN').click();\n\n    //cek muncul alert email tidak valid\n    const invalidEmail = await $('//android.widget.TextView[@text=\"Please enter a valid email address\"]');\n    await expect(invalidEmail).toBeExisting();\n    await expect(invalidEmail).toHaveText(\"Please enter a valid email address\");\n    await driver.pause(2000);\n  });\n  it('Fail to login with less than 8 chars password - NEGATIVE', async () => {\n    //mengakses field email dan memasukkan value ke dalamnya\n    await $('~input-email').setValue(\"lala@mail.co\");\n\n    //mengakses field password dan memasukkan value ke dalamnya\n    await $('~input-password').setValue(\"Lala\");\n\n    //klik tombol login\n    await $('~button-LOGIN').click();\n\n    //cek muncul alert password minimal 8 karakter\n    const invalidPassword = await $('//android.widget.TextView[@text=\"Please enter at least 8 characters\"]');\n    await expect(invalidPassword).toBeExisting();\n    await expect(invalidPassword).toHaveText(\"Please enter at least 8 characters\");\n    await driver.pause(2000);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJkZXNjcmliZSIsImJlZm9yZSIsImhvbWVTY3JlZW4iLCIkIiwiZXhwZWN0IiwidG9CZURpc3BsYXllZCIsImNsaWNrIiwibG9naW5QYWdlIiwiZ2V0VGV4dCIsImRyaXZlciIsInBhdXNlIiwiaXQiLCJlbWFpbEZpZWxkIiwic2V0VmFsdWUiLCJwYXNzd29yZEZpZWxkIiwiYnV0dG9uTG9naW4iLCJzdWNjZXNzVGl0bGUiLCJzdWNjZXNzTWVzc2FnZSIsInRvSGF2ZVRleHQiLCJ0b0JlRXhpc3RpbmciLCJpbnZhbGlkRW1haWwiLCJpbnZhbGlkUGFzc3dvcmQiXSwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcaXB1dFxcRG93bmxvYWRzXFxtb2JpbGV0ZXN0aW5nXFx0ZXN0XFxzcGVjc1xcIiwic291cmNlcyI6WyJsb2dpblRlc3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZGVzY3JpYmUoJ01vYmlsZSB0ZXN0aW5nIC0gTE9HSU4nLCAoKSA9PiB7XHJcbiAgICBiZWZvcmUoIGFzeW5jICgpID0+IHtcclxuICAgICAgICAvL2NlayBlbGVtZW4gaG9tZXNjcmVlbiBtdW5jdWwgZGVuZ2FuIG1lbmdndW5ha2FuIHhwYXRoXHJcbiAgICAgICAgY29uc3QgaG9tZVNjcmVlbj0gYXdhaXQgJCgnLy9hbmRyb2lkLndpZGdldC5TY3JvbGxWaWV3W0Bjb250ZW50LWRlc2M9XCJIb21lLXNjcmVlblwiXScpO1xyXG4gICAgICAgIGF3YWl0IGV4cGVjdChob21lU2NyZWVuKS50b0JlRGlzcGxheWVkKCk7XHJcblxyXG4gICAgICAgIC8va2xpayBtZW51IGxvZ2luIG1lbmdndW5ha2FuIGFjY2Vzc2liaWxpdHkgaWRcclxuICAgICAgICBhd2FpdCAkKCd+TG9naW4nKS5jbGljaygpO1xyXG5cclxuICAgICAgICAvL2NlayBlbGVtZW4gdW50dWsgbWVtYXN0aWthbiBiZXJhZGEgZGkgaGFsYW1hbiBsb2dpblxyXG4gICAgICAgIGNvbnN0IGxvZ2luUGFnZSA9IGF3YWl0ICQoJy8vYW5kcm9pZC52aWV3LlZpZXdHcm91cFtAY29udGVudC1kZXNjPVwiYnV0dG9uLWxvZ2luLWNvbnRhaW5lclwiXScpLmdldFRleHQoKTtcclxuICAgICAgICBhd2FpdCBleHBlY3QobG9naW5QYWdlID09IFwiTE9HSU5cIik7XHJcblxyXG4gICAgICAgIGF3YWl0IGRyaXZlci5wYXVzZSgyMDAwKTtcclxuICAgICAgfSk7XHJcblxyXG4gICAgaXQoJ0xvZ2luIHdpdGggdmFsaWQgZGF0YSAtIFBPU0lUSVZFJywgYXN5bmMgKCkgPT4ge1xyXG4gICAgICAgIC8vbWVuZ2Frc2VzIGZpZWxkIGVtYWlsIGRhbiBtZW1hc3Vra2FuIHZhbHVlIGtlIGRhbGFtbnlhXHJcbiAgICAgICAgY29uc3QgZW1haWxGaWVsZCA9IGF3YWl0ICQoJ35pbnB1dC1lbWFpbCcpO1xyXG4gICAgICAgIGF3YWl0IGVtYWlsRmllbGQuc2V0VmFsdWUoXCJsYWxhQG1haWwuY29cIik7XHJcblxyXG4gICAgICAgIC8vbWVuZ2Frc2VzIGZpZWxkIHBhc3N3b3JkIGRhbiBtZW1hc3Vra2FuIHZhbHVlIGtlIGRhbGFtbnlhXHJcbiAgICAgICAgY29uc3QgcGFzc3dvcmRGaWVsZCA9IGF3YWl0ICQoJ35pbnB1dC1wYXNzd29yZCcpO1xyXG4gICAgICAgIGF3YWl0IHBhc3N3b3JkRmllbGQuc2V0VmFsdWUoXCJMYWxhLjEyMzRcIik7XHJcblxyXG4gICAgICAgIC8va2xpayB0b21ib2wgbG9naW5cclxuICAgICAgICBjb25zdCBidXR0b25Mb2dpbiA9IGF3YWl0ICQoJ35idXR0b24tTE9HSU4nKTtcclxuICAgICAgICBhd2FpdCBidXR0b25Mb2dpbi5jbGljaygpO1xyXG5cclxuICAgICAgICAvL2NlayBtdW5jdWwgcG9wdXAgYmVyaGFzaWwgbG9naW5cclxuICAgICAgICBjb25zdCBzdWNjZXNzVGl0bGUgPSBhd2FpdCAkKCcvL2FuZHJvaWQud2lkZ2V0LlRleHRWaWV3W0ByZXNvdXJjZS1pZD1cImFuZHJvaWQ6aWQvYWxlcnRUaXRsZVwiXScpXHJcbiAgICAgICAgY29uc3Qgc3VjY2Vzc01lc3NhZ2UgPSBhd2FpdCAkKCcvL2FuZHJvaWQud2lkZ2V0LlRleHRWaWV3W0ByZXNvdXJjZS1pZD1cImFuZHJvaWQ6aWQvbWVzc2FnZVwiXScpXHJcbiAgICAgICAgYXdhaXQgZXhwZWN0KHN1Y2Nlc3NUaXRsZSkudG9IYXZlVGV4dChcIlN1Y2Nlc3NcIik7XHJcbiAgICAgICAgYXdhaXQgZXhwZWN0KHN1Y2Nlc3NNZXNzYWdlKS50b0JlRXhpc3RpbmcoKTtcclxuICAgICAgICBhd2FpdCBleHBlY3Qoc3VjY2Vzc01lc3NhZ2UpLnRvSGF2ZVRleHQoXCJZb3UgYXJlIGxvZ2dlZCBpbiFcIik7XHJcblxyXG4gICAgICAgIC8va2xpayBcIk9rXCIgdW50dWsgbWVudXR1cCBwb3B1cFxyXG4gICAgICAgIGF3YWl0ICQoJy8vYW5kcm9pZC53aWRnZXQuQnV0dG9uW0ByZXNvdXJjZS1pZD1cImFuZHJvaWQ6aWQvYnV0dG9uMVwiXScpLmNsaWNrKCk7XHJcbiAgICB9KVxyXG5cclxuICAgIGl0KCdGYWlsIHRvIGxvZ2luIHdpdGggaW52YWxpZCBlbWFpbCBmb3JtYXQgLSBORUdBVElWRScsIGFzeW5jICgpID0+IHtcclxuICAgICAgICAvL21lbmdha3NlcyBmaWVsZCBlbWFpbCBkYW4gbWVtYXN1a2thbiB2YWx1ZSBrZSBkYWxhbW55YVxyXG4gICAgICAgIGF3YWl0ICQoJ35pbnB1dC1lbWFpbCcpLnNldFZhbHVlKFwibGFsYVwiKTtcclxuXHJcbiAgICAgICAgLy9tZW5nYWtzZXMgZmllbGQgcGFzc3dvcmQgZGFuIG1lbWFzdWtrYW4gdmFsdWUga2UgZGFsYW1ueWFcclxuICAgICAgICBhd2FpdCAkKCd+aW5wdXQtcGFzc3dvcmQnKS5zZXRWYWx1ZShcIkxhbGEuMTIzNFwiKTtcclxuXHJcbiAgICAgICAgLy9rbGlrIHRvbWJvbCBsb2dpblxyXG4gICAgICAgIGF3YWl0ICQoJ35idXR0b24tTE9HSU4nKS5jbGljaygpO1xyXG5cclxuICAgICAgICAvL2NlayBtdW5jdWwgYWxlcnQgZW1haWwgdGlkYWsgdmFsaWRcclxuICAgICAgICBjb25zdCBpbnZhbGlkRW1haWwgPSBhd2FpdCAkKCcvL2FuZHJvaWQud2lkZ2V0LlRleHRWaWV3W0B0ZXh0PVwiUGxlYXNlIGVudGVyIGEgdmFsaWQgZW1haWwgYWRkcmVzc1wiXScpO1xyXG4gICAgICAgIGF3YWl0IGV4cGVjdChpbnZhbGlkRW1haWwpLnRvQmVFeGlzdGluZygpO1xyXG4gICAgICAgIGF3YWl0IGV4cGVjdChpbnZhbGlkRW1haWwpLnRvSGF2ZVRleHQoXCJQbGVhc2UgZW50ZXIgYSB2YWxpZCBlbWFpbCBhZGRyZXNzXCIpO1xyXG5cclxuICAgICAgICBhd2FpdCBkcml2ZXIucGF1c2UoMjAwMCk7XHJcbiAgICB9KVxyXG5cclxuICAgIGl0KCdGYWlsIHRvIGxvZ2luIHdpdGggbGVzcyB0aGFuIDggY2hhcnMgcGFzc3dvcmQgLSBORUdBVElWRScsIGFzeW5jICgpID0+IHtcclxuICAgICAgICAvL21lbmdha3NlcyBmaWVsZCBlbWFpbCBkYW4gbWVtYXN1a2thbiB2YWx1ZSBrZSBkYWxhbW55YVxyXG4gICAgICAgIGF3YWl0ICQoJ35pbnB1dC1lbWFpbCcpLnNldFZhbHVlKFwibGFsYUBtYWlsLmNvXCIpO1xyXG5cclxuICAgICAgICAvL21lbmdha3NlcyBmaWVsZCBwYXNzd29yZCBkYW4gbWVtYXN1a2thbiB2YWx1ZSBrZSBkYWxhbW55YVxyXG4gICAgICAgIGF3YWl0ICQoJ35pbnB1dC1wYXNzd29yZCcpLnNldFZhbHVlKFwiTGFsYVwiKTtcclxuXHJcbiAgICAgICAgLy9rbGlrIHRvbWJvbCBsb2dpblxyXG4gICAgICAgIGF3YWl0ICQoJ35idXR0b24tTE9HSU4nKS5jbGljaygpO1xyXG5cclxuICAgICAgICAvL2NlayBtdW5jdWwgYWxlcnQgcGFzc3dvcmQgbWluaW1hbCA4IGthcmFrdGVyXHJcbiAgICAgICAgY29uc3QgaW52YWxpZFBhc3N3b3JkID0gYXdhaXQgJCgnLy9hbmRyb2lkLndpZGdldC5UZXh0Vmlld1tAdGV4dD1cIlBsZWFzZSBlbnRlciBhdCBsZWFzdCA4IGNoYXJhY3RlcnNcIl0nKTtcclxuICAgICAgICBhd2FpdCBleHBlY3QoaW52YWxpZFBhc3N3b3JkKS50b0JlRXhpc3RpbmcoKTtcclxuICAgICAgICBhd2FpdCBleHBlY3QoaW52YWxpZFBhc3N3b3JkKS50b0hhdmVUZXh0KFwiUGxlYXNlIGVudGVyIGF0IGxlYXN0IDggY2hhcmFjdGVyc1wiKTtcclxuXHJcbiAgICAgICAgYXdhaXQgZHJpdmVyLnBhdXNlKDIwMDApO1xyXG4gICAgfSlcclxufSkiXSwibWFwcGluZ3MiOiJBQUFBQSxRQUFRLENBQUMsd0JBQXdCLEVBQUUsTUFBTTtFQUNyQ0MsTUFBTSxDQUFFLFlBQVk7SUFDaEI7SUFDQSxNQUFNQyxVQUFVLEdBQUUsTUFBTUMsQ0FBQyxDQUFDLDBEQUEwRCxDQUFDO0lBQ3JGLE1BQU1DLE1BQU0sQ0FBQ0YsVUFBVSxDQUFDLENBQUNHLGFBQWEsQ0FBQyxDQUFDOztJQUV4QztJQUNBLE1BQU1GLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQ0csS0FBSyxDQUFDLENBQUM7O0lBRXpCO0lBQ0EsTUFBTUMsU0FBUyxHQUFHLE1BQU1KLENBQUMsQ0FBQyxrRUFBa0UsQ0FBQyxDQUFDSyxPQUFPLENBQUMsQ0FBQztJQUN2RyxNQUFNSixNQUFNLENBQUNHLFNBQVMsSUFBSSxPQUFPLENBQUM7SUFFbEMsTUFBTUUsTUFBTSxDQUFDQyxLQUFLLENBQUMsSUFBSSxDQUFDO0VBQzFCLENBQUMsQ0FBQztFQUVKQyxFQUFFLENBQUMsa0NBQWtDLEVBQUUsWUFBWTtJQUMvQztJQUNBLE1BQU1DLFVBQVUsR0FBRyxNQUFNVCxDQUFDLENBQUMsY0FBYyxDQUFDO0lBQzFDLE1BQU1TLFVBQVUsQ0FBQ0MsUUFBUSxDQUFDLGNBQWMsQ0FBQzs7SUFFekM7SUFDQSxNQUFNQyxhQUFhLEdBQUcsTUFBTVgsQ0FBQyxDQUFDLGlCQUFpQixDQUFDO0lBQ2hELE1BQU1XLGFBQWEsQ0FBQ0QsUUFBUSxDQUFDLFdBQVcsQ0FBQzs7SUFFekM7SUFDQSxNQUFNRSxXQUFXLEdBQUcsTUFBTVosQ0FBQyxDQUFDLGVBQWUsQ0FBQztJQUM1QyxNQUFNWSxXQUFXLENBQUNULEtBQUssQ0FBQyxDQUFDOztJQUV6QjtJQUNBLE1BQU1VLFlBQVksR0FBRyxNQUFNYixDQUFDLENBQUMsaUVBQWlFLENBQUM7SUFDL0YsTUFBTWMsY0FBYyxHQUFHLE1BQU1kLENBQUMsQ0FBQyw4REFBOEQsQ0FBQztJQUM5RixNQUFNQyxNQUFNLENBQUNZLFlBQVksQ0FBQyxDQUFDRSxVQUFVLENBQUMsU0FBUyxDQUFDO0lBQ2hELE1BQU1kLE1BQU0sQ0FBQ2EsY0FBYyxDQUFDLENBQUNFLFlBQVksQ0FBQyxDQUFDO0lBQzNDLE1BQU1mLE1BQU0sQ0FBQ2EsY0FBYyxDQUFDLENBQUNDLFVBQVUsQ0FBQyxvQkFBb0IsQ0FBQzs7SUFFN0Q7SUFDQSxNQUFNZixDQUFDLENBQUMsNERBQTRELENBQUMsQ0FBQ0csS0FBSyxDQUFDLENBQUM7RUFDakYsQ0FBQyxDQUFDO0VBRUZLLEVBQUUsQ0FBQyxvREFBb0QsRUFBRSxZQUFZO0lBQ2pFO0lBQ0EsTUFBTVIsQ0FBQyxDQUFDLGNBQWMsQ0FBQyxDQUFDVSxRQUFRLENBQUMsTUFBTSxDQUFDOztJQUV4QztJQUNBLE1BQU1WLENBQUMsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDVSxRQUFRLENBQUMsV0FBVyxDQUFDOztJQUVoRDtJQUNBLE1BQU1WLENBQUMsQ0FBQyxlQUFlLENBQUMsQ0FBQ0csS0FBSyxDQUFDLENBQUM7O0lBRWhDO0lBQ0EsTUFBTWMsWUFBWSxHQUFHLE1BQU1qQixDQUFDLENBQUMsdUVBQXVFLENBQUM7SUFDckcsTUFBTUMsTUFBTSxDQUFDZ0IsWUFBWSxDQUFDLENBQUNELFlBQVksQ0FBQyxDQUFDO0lBQ3pDLE1BQU1mLE1BQU0sQ0FBQ2dCLFlBQVksQ0FBQyxDQUFDRixVQUFVLENBQUMsb0NBQW9DLENBQUM7SUFFM0UsTUFBTVQsTUFBTSxDQUFDQyxLQUFLLENBQUMsSUFBSSxDQUFDO0VBQzVCLENBQUMsQ0FBQztFQUVGQyxFQUFFLENBQUMsMERBQTBELEVBQUUsWUFBWTtJQUN2RTtJQUNBLE1BQU1SLENBQUMsQ0FBQyxjQUFjLENBQUMsQ0FBQ1UsUUFBUSxDQUFDLGNBQWMsQ0FBQzs7SUFFaEQ7SUFDQSxNQUFNVixDQUFDLENBQUMsaUJBQWlCLENBQUMsQ0FBQ1UsUUFBUSxDQUFDLE1BQU0sQ0FBQzs7SUFFM0M7SUFDQSxNQUFNVixDQUFDLENBQUMsZUFBZSxDQUFDLENBQUNHLEtBQUssQ0FBQyxDQUFDOztJQUVoQztJQUNBLE1BQU1lLGVBQWUsR0FBRyxNQUFNbEIsQ0FBQyxDQUFDLHVFQUF1RSxDQUFDO0lBQ3hHLE1BQU1DLE1BQU0sQ0FBQ2lCLGVBQWUsQ0FBQyxDQUFDRixZQUFZLENBQUMsQ0FBQztJQUM1QyxNQUFNZixNQUFNLENBQUNpQixlQUFlLENBQUMsQ0FBQ0gsVUFBVSxDQUFDLG9DQUFvQyxDQUFDO0lBRTlFLE1BQU1ULE1BQU0sQ0FBQ0MsS0FBSyxDQUFDLElBQUksQ0FBQztFQUM1QixDQUFDLENBQUM7QUFDTixDQUFDLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=","map":{"version":3,"names":["describe","before","homeScreen","$","expect","toBeDisplayed","click","loginPage","getText","driver","pause","it","emailField","setValue","passwordField","buttonLogin","successTitle","successMessage","toHaveText","toBeExisting","invalidEmail","invalidPassword"],"sourceRoot":"C:\\Users\\iput\\Downloads\\mobiletesting\\test\\specs\\","sources":["loginTest.js"],"sourcesContent":["describe('Mobile testing - LOGIN', () => {\r\n    before( async () => {\r\n        //cek elemen homescreen muncul dengan menggunakan xpath\r\n        const homeScreen= await $('//android.widget.ScrollView[@content-desc=\"Home-screen\"]');\r\n        await expect(homeScreen).toBeDisplayed();\r\n\r\n        //klik menu login menggunakan accessibility id\r\n        await $('~Login').click();\r\n\r\n        //cek elemen untuk memastikan berada di halaman login\r\n        const loginPage = await $('//android.view.ViewGroup[@content-desc=\"button-login-container\"]').getText();\r\n        await expect(loginPage == \"LOGIN\");\r\n\r\n        await driver.pause(2000);\r\n      });\r\n\r\n    it('Login with valid data - POSITIVE', async () => {\r\n        //mengakses field email dan memasukkan value ke dalamnya\r\n        const emailField = await $('~input-email');\r\n        await emailField.setValue(\"lala@mail.co\");\r\n\r\n        //mengakses field password dan memasukkan value ke dalamnya\r\n        const passwordField = await $('~input-password');\r\n        await passwordField.setValue(\"Lala.1234\");\r\n\r\n        //klik tombol login\r\n        const buttonLogin = await $('~button-LOGIN');\r\n        await buttonLogin.click();\r\n\r\n        //cek muncul popup berhasil login\r\n        const successTitle = await $('//android.widget.TextView[@resource-id=\"android:id/alertTitle\"]')\r\n        const successMessage = await $('//android.widget.TextView[@resource-id=\"android:id/message\"]')\r\n        await expect(successTitle).toHaveText(\"Success\");\r\n        await expect(successMessage).toBeExisting();\r\n        await expect(successMessage).toHaveText(\"You are logged in!\");\r\n\r\n        //klik \"Ok\" untuk menutup popup\r\n        await $('//android.widget.Button[@resource-id=\"android:id/button1\"]').click();\r\n    })\r\n\r\n    it('Fail to login with invalid email format - NEGATIVE', async () => {\r\n        //mengakses field email dan memasukkan value ke dalamnya\r\n        await $('~input-email').setValue(\"lala\");\r\n\r\n        //mengakses field password dan memasukkan value ke dalamnya\r\n        await $('~input-password').setValue(\"Lala.1234\");\r\n\r\n        //klik tombol login\r\n        await $('~button-LOGIN').click();\r\n\r\n        //cek muncul alert email tidak valid\r\n        const invalidEmail = await $('//android.widget.TextView[@text=\"Please enter a valid email address\"]');\r\n        await expect(invalidEmail).toBeExisting();\r\n        await expect(invalidEmail).toHaveText(\"Please enter a valid email address\");\r\n\r\n        await driver.pause(2000);\r\n    })\r\n\r\n    it('Fail to login with less than 8 chars password - NEGATIVE', async () => {\r\n        //mengakses field email dan memasukkan value ke dalamnya\r\n        await $('~input-email').setValue(\"lala@mail.co\");\r\n\r\n        //mengakses field password dan memasukkan value ke dalamnya\r\n        await $('~input-password').setValue(\"Lala\");\r\n\r\n        //klik tombol login\r\n        await $('~button-LOGIN').click();\r\n\r\n        //cek muncul alert password minimal 8 karakter\r\n        const invalidPassword = await $('//android.widget.TextView[@text=\"Please enter at least 8 characters\"]');\r\n        await expect(invalidPassword).toBeExisting();\r\n        await expect(invalidPassword).toHaveText(\"Please enter at least 8 characters\");\r\n\r\n        await driver.pause(2000);\r\n    })\r\n})"],"mappings":"AAAAA,QAAQ,CAAC,wBAAwB,EAAE,MAAM;EACrCC,MAAM,CAAE,YAAY;IAChB;IACA,MAAMC,UAAU,GAAE,MAAMC,CAAC,CAAC,0DAA0D,CAAC;IACrF,MAAMC,MAAM,CAACF,UAAU,CAAC,CAACG,aAAa,CAAC,CAAC;;IAExC;IACA,MAAMF,CAAC,CAAC,QAAQ,CAAC,CAACG,KAAK,CAAC,CAAC;;IAEzB;IACA,MAAMC,SAAS,GAAG,MAAMJ,CAAC,CAAC,kEAAkE,CAAC,CAACK,OAAO,CAAC,CAAC;IACvG,MAAMJ,MAAM,CAACG,SAAS,IAAI,OAAO,CAAC;IAElC,MAAME,MAAM,CAACC,KAAK,CAAC,IAAI,CAAC;EAC1B,CAAC,CAAC;EAEJC,EAAE,CAAC,kCAAkC,EAAE,YAAY;IAC/C;IACA,MAAMC,UAAU,GAAG,MAAMT,CAAC,CAAC,cAAc,CAAC;IAC1C,MAAMS,UAAU,CAACC,QAAQ,CAAC,cAAc,CAAC;;IAEzC;IACA,MAAMC,aAAa,GAAG,MAAMX,CAAC,CAAC,iBAAiB,CAAC;IAChD,MAAMW,aAAa,CAACD,QAAQ,CAAC,WAAW,CAAC;;IAEzC;IACA,MAAME,WAAW,GAAG,MAAMZ,CAAC,CAAC,eAAe,CAAC;IAC5C,MAAMY,WAAW,CAACT,KAAK,CAAC,CAAC;;IAEzB;IACA,MAAMU,YAAY,GAAG,MAAMb,CAAC,CAAC,iEAAiE,CAAC;IAC/F,MAAMc,cAAc,GAAG,MAAMd,CAAC,CAAC,8DAA8D,CAAC;IAC9F,MAAMC,MAAM,CAACY,YAAY,CAAC,CAACE,UAAU,CAAC,SAAS,CAAC;IAChD,MAAMd,MAAM,CAACa,cAAc,CAAC,CAACE,YAAY,CAAC,CAAC;IAC3C,MAAMf,MAAM,CAACa,cAAc,CAAC,CAACC,UAAU,CAAC,oBAAoB,CAAC;;IAE7D;IACA,MAAMf,CAAC,CAAC,4DAA4D,CAAC,CAACG,KAAK,CAAC,CAAC;EACjF,CAAC,CAAC;EAEFK,EAAE,CAAC,oDAAoD,EAAE,YAAY;IACjE;IACA,MAAMR,CAAC,CAAC,cAAc,CAAC,CAACU,QAAQ,CAAC,MAAM,CAAC;;IAExC;IACA,MAAMV,CAAC,CAAC,iBAAiB,CAAC,CAACU,QAAQ,CAAC,WAAW,CAAC;;IAEhD;IACA,MAAMV,CAAC,CAAC,eAAe,CAAC,CAACG,KAAK,CAAC,CAAC;;IAEhC;IACA,MAAMc,YAAY,GAAG,MAAMjB,CAAC,CAAC,uEAAuE,CAAC;IACrG,MAAMC,MAAM,CAACgB,YAAY,CAAC,CAACD,YAAY,CAAC,CAAC;IACzC,MAAMf,MAAM,CAACgB,YAAY,CAAC,CAACF,UAAU,CAAC,oCAAoC,CAAC;IAE3E,MAAMT,MAAM,CAACC,KAAK,CAAC,IAAI,CAAC;EAC5B,CAAC,CAAC;EAEFC,EAAE,CAAC,0DAA0D,EAAE,YAAY;IACvE;IACA,MAAMR,CAAC,CAAC,cAAc,CAAC,CAACU,QAAQ,CAAC,cAAc,CAAC;;IAEhD;IACA,MAAMV,CAAC,CAAC,iBAAiB,CAAC,CAACU,QAAQ,CAAC,MAAM,CAAC;;IAE3C;IACA,MAAMV,CAAC,CAAC,eAAe,CAAC,CAACG,KAAK,CAAC,CAAC;;IAEhC;IACA,MAAMe,eAAe,GAAG,MAAMlB,CAAC,CAAC,uEAAuE,CAAC;IACxG,MAAMC,MAAM,CAACiB,eAAe,CAAC,CAACF,YAAY,CAAC,CAAC;IAC5C,MAAMf,MAAM,CAACiB,eAAe,CAAC,CAACH,UAAU,CAAC,oCAAoC,CAAC;IAE9E,MAAMT,MAAM,CAACC,KAAK,CAAC,IAAI,CAAC;EAC5B,CAAC,CAAC;AACN,CAAC,CAAC","ignoreList":[]}},"mtime":1717240288121},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\iput\\\\mobile-testing\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\iput\\\\mobile-testing\",\"filename\":\"C:\\\\Users\\\\iput\\\\mobile-testing\\\\wdio.conf.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\iput\\\\mobile-testing\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.6:test":{"value":{"code":"exports.config = {\n  //\n  // ====================\n  // Runner Configuration\n  // ====================\n  // WebdriverIO supports running e2e tests as well as unit and component tests.\n  runner: 'local',\n  port: 4727,\n  path: '/wd/hub',\n  //\n  // ==================\n  // Specify Test Files\n  // ==================\n  // Define which test specs should run. The pattern is relative to the directory\n  // of the configuration file being run.\n  //\n  // The specs are defined as an array of spec files (optionally using wildcards\n  // that will be expanded). The test for each spec file will be run in a separate\n  // worker process. In order to have a group of spec files run in the same worker\n  // process simply enclose them in an array within the specs array.\n  //\n  // The path of the spec files will be resolved relative from the directory of\n  // of the config file unless it's absolute.\n  //\n  specs: [\n  // ToDo: define location for spec files here\n  './test/specs/**/*.js'],\n  // Patterns to exclude.\n  exclude: [\n    // 'path/to/excluded/files'\n  ],\n  //\n  // ============\n  // Capabilities\n  // ============\n  // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n  // time. Depending on the number of capabilities, WebdriverIO launches several test\n  // sessions. Within your capabilities you can overwrite the spec and exclude options in\n  // order to group specific specs to a specific capability.\n  //\n  // First, you can define how many instances should be started at the same time. Let's\n  // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n  // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n  // files and you set maxInstances to 10, all spec files will get tested at the same time\n  // and 30 processes will get spawned. The property handles how many capabilities\n  // from the same test should run tests.\n  //\n  maxInstances: 10,\n  //\n  // If you have trouble getting all important capabilities together, check out the\n  // Sauce Labs platform configurator - a great tool to configure your capabilities:\n  // https://saucelabs.com/platform/platform-configurator\n  //\n  capabilities: [{\n    // capabilities for local Appium web tests on an Android Emulator\n    platformName: 'Android',\n    'appium:deviceName': 'vd-a13',\n    'appium:platformVersion': '13.0',\n    'appium:automationName': 'UiAutomator2',\n    'appium:appPackage': 'com.wdiodemoapp',\n    'appium:appActivity': 'com.wdiodemoapp.MainActivity'\n    //'appium:app': 'C:/Users/iput/mobile-testing/app/android.wdio.native.app.v1.0.8.apk'\n  }],\n  //\n  // ===================\n  // Test Configurations\n  // ===================\n  // Define all options that are relevant for the WebdriverIO instance here\n  //\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  logLevel: 'info',\n  //\n  // Set specific log levels per logger\n  // loggers:\n  // - webdriver, webdriverio\n  // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n  // - @wdio/mocha-framework, @wdio/jasmine-framework\n  // - @wdio/local-runner\n  // - @wdio/sumologic-reporter\n  // - @wdio/cli, @wdio/config, @wdio/utils\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  // logLevels: {\n  //     webdriver: 'info',\n  //     '@wdio/appium-service': 'info'\n  // },\n  //\n  // If you only want to run your tests until a specific amount of tests have failed use\n  // bail (default is 0 - don't bail, run all tests).\n  bail: 0,\n  //\n  // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n  // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n  // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n  // gets prepended directly.\n  //baseUrl: 'http://localhost',\n  //\n  // Default timeout for all waitFor* commands.\n  waitforTimeout: 10000,\n  //\n  // Default timeout in milliseconds for request\n  // if browser driver or grid doesn't send response\n  connectionRetryTimeout: 120000,\n  //\n  // Default request retries count\n  connectionRetryCount: 3,\n  //\n  // Test runner services\n  // Services take over a specific job you don't want to take care of. They enhance\n  // your test setup with almost no effort. Unlike plugins, they don't add new\n  // commands. Instead, they hook themselves up into the test process.\n  services: [['appium', {\n    args: {\n      address: 'localhost',\n      port: 4727,\n      path: '/wd/hub'\n    }\n  }]],\n  // Framework you want to run your specs with.\n  // The following are supported: Mocha, Jasmine, and Cucumber\n  // see also: https://webdriver.io/docs/frameworks\n  //\n  // Make sure you have the wdio adapter package for the specific framework installed\n  // before running any tests.\n  framework: 'mocha',\n  //\n  // The number of times to retry the entire specfile when it fails as a whole\n  // specFileRetries: 1,\n  //\n  // Delay in seconds between the spec file retry attempts\n  // specFileRetriesDelay: 0,\n  //\n  // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n  // specFileRetriesDeferred: false,\n  //\n  // Test reporter for stdout.\n  // The only one supported by default is 'dot'\n  // see also: https://webdriver.io/docs/dot-reporter\n  reporters: [[\"html-nice\", {\n    outputDir: './reports/',\n    fileName: 'report.html',\n    reportTitle: 'Test Report',\n    //linkScreenshots: true,\n    showInBrowser: true\n    //useOnAfterCommandForScreenshot: true,\n  }], 'spec'],\n  // Options to be passed to Mocha.\n  // See the full list at http://mochajs.org/\n  mochaOpts: {\n    ui: 'bdd',\n    timeout: 60000\n  }\n\n  //\n  // =====\n  // Hooks\n  // =====\n  // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n  // it and to build services around it. You can either apply a single function or an array of\n  // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n  // resolved to continue.\n  /**\n   * Gets executed once before all workers get launched.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   */\n  // onPrepare: function (config, capabilities) {\n  // },\n  /**\n   * Gets executed before a worker process is spawned and can be used to initialize specific service\n   * for that worker as well as modify runtime environments in an async fashion.\n   * @param  {string} cid      capability id (e.g 0-0)\n   * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\n   * @param  {object} specs    specs to be run in the worker process\n   * @param  {object} args     object that will be merged with the main configuration once worker is initialized\n   * @param  {object} execArgv list of string arguments passed to the worker process\n   */\n  // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n  // },\n  /**\n   * Gets executed just after a worker process has exited.\n   * @param  {string} cid      capability id (e.g 0-0)\n   * @param  {number} exitCode 0 - success, 1 - fail\n   * @param  {object} specs    specs to be run in the worker process\n   * @param  {number} retries  number of retries used\n   */\n  // onWorkerEnd: function (cid, exitCode, specs, retries) {\n  // },\n  /**\n   * Gets executed just before initialising the webdriver session and test framework. It allows you\n   * to manipulate configurations depending on the capability or spec.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that are to be run\n   * @param {string} cid worker id (e.g. 0-0)\n   */\n  // beforeSession: function (config, capabilities, specs, cid) {\n  // },\n  /**\n   * Gets executed before test execution begins. At this point you can access to all global\n   * variables like `browser`. It is the perfect place to define custom commands.\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs        List of spec file paths that are to be run\n   * @param {object}         browser      instance of created browser/device session\n   */\n  // before: function (capabilities, specs) {\n  // },\n  /**\n   * Runs before a WebdriverIO command gets executed.\n   * @param {string} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   */\n  // beforeCommand: function (commandName, args) {\n  // },\n  /**\n   * Hook that gets executed before the suite starts\n   * @param {object} suite suite details\n   */\n  // beforeSuite: function (suite) {\n  // },\n  /**\n   * Function to be executed before a test (in Mocha/Jasmine) starts.\n   */\n  // beforeTest: function (test, context) {\n  // },\n  /**\n   * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n   * beforeEach in Mocha)\n   */\n  // beforeHook: function (test, context, hookName) {\n  // },\n  /**\n   * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n   * afterEach in Mocha)\n   */\n  // afterHook: function (test, context, { error, result, duration, passed, retries }, hookName) {\n  // },\n  /**\n   * Function to be executed after a test (in Mocha/Jasmine only)\n   * @param {object}  test             test object\n   * @param {object}  context          scope object the test was executed with\n   * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n   * @param {*}       result.result    return object of test function\n   * @param {number}  result.duration  duration of test\n   * @param {boolean} result.passed    true if test has passed, otherwise false\n   * @param {object}  result.retries   information about spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n   */\n  // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n  // },\n\n  /**\n   * Hook that gets executed after the suite has ended\n   * @param {object} suite suite details\n   */\n  // afterSuite: function (suite) {\n  // },\n  /**\n   * Runs after a WebdriverIO command gets executed\n   * @param {string} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   * @param {number} result 0 - command success, 1 - command error\n   * @param {object} error error object if any\n   */\n  // afterCommand: function (commandName, args, result, error) {\n  // },\n  /**\n   * Gets executed after all tests are done. You still have access to all global variables from\n   * the test.\n   * @param {number} result 0 - test pass, 1 - test fail\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // after: function (result, capabilities, specs) {\n  // },\n  /**\n   * Gets executed right after terminating the webdriver session.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // afterSession: function (config, capabilities, specs) {\n  // },\n  /**\n   * Gets executed after all workers got shut down and the process is about to exit. An error\n   * thrown in the onComplete hook will result in the test run failing.\n   * @param {object} exitCode 0 - success, 1 - fail\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {<Object>} results object containing test results\n   */\n  // onComplete: function(exitCode, config, capabilities, results) {\n  // },\n  /**\n  * Gets executed when a refresh happens.\n  * @param {string} oldSessionId session ID of the old session\n  * @param {string} newSessionId session ID of the new session\n  */\n  // onReload: function(oldSessionId, newSessionId) {\n  // }\n  /**\n  * Hook that gets executed before a WebdriverIO assertion happens.\n  * @param {object} params information about the assertion to be executed\n  */\n  // beforeAssertion: function(params) {\n  // }\n  /**\n  * Hook that gets executed after a WebdriverIO assertion happened.\n  * @param {object} params information about the assertion that was executed, including its results\n  */\n  // afterAssertion: function(params) {\n  // }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["exports","config","runner","port","path","specs","exclude","maxInstances","capabilities","platformName","logLevel","bail","waitforTimeout","connectionRetryTimeout","connectionRetryCount","services","args","address","framework","reporters","outputDir","fileName","reportTitle","showInBrowser","mochaOpts","ui","timeout"],"sourceRoot":"C:\\Users\\iput\\mobile-testing\\","sources":["wdio.conf.js"],"sourcesContent":["exports.config = {\n    //\n    // ====================\n    // Runner Configuration\n    // ====================\n    // WebdriverIO supports running e2e tests as well as unit and component tests.\n    runner: 'local',\n    port: 4727,\n    path: '/wd/hub',\n    //\n    // ==================\n    // Specify Test Files\n    // ==================\n    // Define which test specs should run. The pattern is relative to the directory\n    // of the configuration file being run.\n    //\n    // The specs are defined as an array of spec files (optionally using wildcards\n    // that will be expanded). The test for each spec file will be run in a separate\n    // worker process. In order to have a group of spec files run in the same worker\n    // process simply enclose them in an array within the specs array.\n    //\n    // The path of the spec files will be resolved relative from the directory of\n    // of the config file unless it's absolute.\n    //\n    specs: [\n        // ToDo: define location for spec files here\n        './test/specs/**/*.js'\n    ],\n    // Patterns to exclude.\n    exclude: [\n        // 'path/to/excluded/files'\n    ],\n    //\n    // ============\n    // Capabilities\n    // ============\n    // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n    // time. Depending on the number of capabilities, WebdriverIO launches several test\n    // sessions. Within your capabilities you can overwrite the spec and exclude options in\n    // order to group specific specs to a specific capability.\n    //\n    // First, you can define how many instances should be started at the same time. Let's\n    // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n    // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n    // files and you set maxInstances to 10, all spec files will get tested at the same time\n    // and 30 processes will get spawned. The property handles how many capabilities\n    // from the same test should run tests.\n    //\n    maxInstances: 10,\n    //\n    // If you have trouble getting all important capabilities together, check out the\n    // Sauce Labs platform configurator - a great tool to configure your capabilities:\n    // https://saucelabs.com/platform/platform-configurator\n    //\n    capabilities: [{\n        // capabilities for local Appium web tests on an Android Emulator\n        platformName: 'Android',\n        'appium:deviceName': 'vd-a13',\n        'appium:platformVersion': '13.0',\n        'appium:automationName': 'UiAutomator2',\n        'appium:appPackage': 'com.wdiodemoapp',\n        'appium:appActivity': 'com.wdiodemoapp.MainActivity',\n        //'appium:app': 'C:/Users/iput/mobile-testing/app/android.wdio.native.app.v1.0.8.apk'\n    }],\n\n    //\n    // ===================\n    // Test Configurations\n    // ===================\n    // Define all options that are relevant for the WebdriverIO instance here\n    //\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    logLevel: 'info',\n    //\n    // Set specific log levels per logger\n    // loggers:\n    // - webdriver, webdriverio\n    // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n    // - @wdio/mocha-framework, @wdio/jasmine-framework\n    // - @wdio/local-runner\n    // - @wdio/sumologic-reporter\n    // - @wdio/cli, @wdio/config, @wdio/utils\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    // logLevels: {\n    //     webdriver: 'info',\n    //     '@wdio/appium-service': 'info'\n    // },\n    //\n    // If you only want to run your tests until a specific amount of tests have failed use\n    // bail (default is 0 - don't bail, run all tests).\n    bail: 0,\n    //\n    // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n    // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n    // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n    // gets prepended directly.\n    //baseUrl: 'http://localhost',\n    //\n    // Default timeout for all waitFor* commands.\n    waitforTimeout: 10000,\n    //\n    // Default timeout in milliseconds for request\n    // if browser driver or grid doesn't send response\n    connectionRetryTimeout: 120000,\n    //\n    // Default request retries count\n    connectionRetryCount: 3,\n    //\n    // Test runner services\n    // Services take over a specific job you don't want to take care of. They enhance\n    // your test setup with almost no effort. Unlike plugins, they don't add new\n    // commands. Instead, they hook themselves up into the test process.\n    services: [['appium', {\n        args: {\n            address: 'localhost',\n            port: 4727,\n            path: '/wd/hub'\n        },\n    }]],\n\n    // Framework you want to run your specs with.\n    // The following are supported: Mocha, Jasmine, and Cucumber\n    // see also: https://webdriver.io/docs/frameworks\n    //\n    // Make sure you have the wdio adapter package for the specific framework installed\n    // before running any tests.\n    framework: 'mocha',\n    \n    //\n    // The number of times to retry the entire specfile when it fails as a whole\n    // specFileRetries: 1,\n    //\n    // Delay in seconds between the spec file retry attempts\n    // specFileRetriesDelay: 0,\n    //\n    // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n    // specFileRetriesDeferred: false,\n    //\n    // Test reporter for stdout.\n    // The only one supported by default is 'dot'\n    // see also: https://webdriver.io/docs/dot-reporter\n    reporters: [\n    [\"html-nice\", {\n        outputDir: './reports/',\n        fileName: 'report.html',\n        reportTitle: 'Test Report',\n        //linkScreenshots: true,\n        showInBrowser: true,\n        //useOnAfterCommandForScreenshot: true,\n    }], 'spec'],\n\n    // Options to be passed to Mocha.\n    // See the full list at http://mochajs.org/\n    mochaOpts: {\n        ui: 'bdd',\n        timeout: 60000\n    },\n\n    //\n    // =====\n    // Hooks\n    // =====\n    // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n    // it and to build services around it. You can either apply a single function or an array of\n    // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n    // resolved to continue.\n    /**\n     * Gets executed once before all workers get launched.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     */\n    // onPrepare: function (config, capabilities) {\n    // },\n    /**\n     * Gets executed before a worker process is spawned and can be used to initialize specific service\n     * for that worker as well as modify runtime environments in an async fashion.\n     * @param  {string} cid      capability id (e.g 0-0)\n     * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\n     * @param  {object} specs    specs to be run in the worker process\n     * @param  {object} args     object that will be merged with the main configuration once worker is initialized\n     * @param  {object} execArgv list of string arguments passed to the worker process\n     */\n    // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n    // },\n    /**\n     * Gets executed just after a worker process has exited.\n     * @param  {string} cid      capability id (e.g 0-0)\n     * @param  {number} exitCode 0 - success, 1 - fail\n     * @param  {object} specs    specs to be run in the worker process\n     * @param  {number} retries  number of retries used\n     */\n    // onWorkerEnd: function (cid, exitCode, specs, retries) {\n    // },\n    /**\n     * Gets executed just before initialising the webdriver session and test framework. It allows you\n     * to manipulate configurations depending on the capability or spec.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that are to be run\n     * @param {string} cid worker id (e.g. 0-0)\n     */\n    // beforeSession: function (config, capabilities, specs, cid) {\n    // },\n    /**\n     * Gets executed before test execution begins. At this point you can access to all global\n     * variables like `browser`. It is the perfect place to define custom commands.\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs        List of spec file paths that are to be run\n     * @param {object}         browser      instance of created browser/device session\n     */\n    // before: function (capabilities, specs) {\n    // },\n    /**\n     * Runs before a WebdriverIO command gets executed.\n     * @param {string} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     */\n    // beforeCommand: function (commandName, args) {\n    // },\n    /**\n     * Hook that gets executed before the suite starts\n     * @param {object} suite suite details\n     */\n    // beforeSuite: function (suite) {\n    // },\n    /**\n     * Function to be executed before a test (in Mocha/Jasmine) starts.\n     */\n    // beforeTest: function (test, context) {\n    // },\n    /**\n     * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n     * beforeEach in Mocha)\n     */\n    // beforeHook: function (test, context, hookName) {\n    // },\n    /**\n     * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n     * afterEach in Mocha)\n     */\n    // afterHook: function (test, context, { error, result, duration, passed, retries }, hookName) {\n    // },\n    /**\n     * Function to be executed after a test (in Mocha/Jasmine only)\n     * @param {object}  test             test object\n     * @param {object}  context          scope object the test was executed with\n     * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n     * @param {*}       result.result    return object of test function\n     * @param {number}  result.duration  duration of test\n     * @param {boolean} result.passed    true if test has passed, otherwise false\n     * @param {object}  result.retries   information about spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n     */\n    // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n    // },\n\n\n    /**\n     * Hook that gets executed after the suite has ended\n     * @param {object} suite suite details\n     */\n    // afterSuite: function (suite) {\n    // },\n    /**\n     * Runs after a WebdriverIO command gets executed\n     * @param {string} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     * @param {number} result 0 - command success, 1 - command error\n     * @param {object} error error object if any\n     */\n    // afterCommand: function (commandName, args, result, error) {\n    // },\n    /**\n     * Gets executed after all tests are done. You still have access to all global variables from\n     * the test.\n     * @param {number} result 0 - test pass, 1 - test fail\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // after: function (result, capabilities, specs) {\n    // },\n    /**\n     * Gets executed right after terminating the webdriver session.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // afterSession: function (config, capabilities, specs) {\n    // },\n    /**\n     * Gets executed after all workers got shut down and the process is about to exit. An error\n     * thrown in the onComplete hook will result in the test run failing.\n     * @param {object} exitCode 0 - success, 1 - fail\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {<Object>} results object containing test results\n     */\n    // onComplete: function(exitCode, config, capabilities, results) {\n    // },\n    /**\n    * Gets executed when a refresh happens.\n    * @param {string} oldSessionId session ID of the old session\n    * @param {string} newSessionId session ID of the new session\n    */\n    // onReload: function(oldSessionId, newSessionId) {\n    // }\n    /**\n    * Hook that gets executed before a WebdriverIO assertion happens.\n    * @param {object} params information about the assertion to be executed\n    */\n    // beforeAssertion: function(params) {\n    // }\n    /**\n    * Hook that gets executed after a WebdriverIO assertion happened.\n    * @param {object} params information about the assertion that was executed, including its results\n    */\n    // afterAssertion: function(params) {\n    // }\n}\n"],"mappings":"AAAAA,OAAO,CAACC,MAAM,GAAG;EACb;EACA;EACA;EACA;EACA;EACAC,MAAM,EAAE,OAAO;EACfC,IAAI,EAAE,IAAI;EACVC,IAAI,EAAE,SAAS;EACf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,KAAK,EAAE;EACH;EACA,sBAAsB,CACzB;EACD;EACAC,OAAO,EAAE;IACL;EAAA,CACH;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,EAAE;EAChB;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,CAAC;IACX;IACAC,YAAY,EAAE,SAAS;IACvB,mBAAmB,EAAE,QAAQ;IAC7B,wBAAwB,EAAE,MAAM;IAChC,uBAAuB,EAAE,cAAc;IACvC,mBAAmB,EAAE,iBAAiB;IACtC,oBAAoB,EAAE;IACtB;EACJ,CAAC,CAAC;EAEF;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,QAAQ,EAAE,MAAM;EAChB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,IAAI,EAAE,CAAC;EACP;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,cAAc,EAAE,KAAK;EACrB;EACA;EACA;EACAC,sBAAsB,EAAE,MAAM;EAC9B;EACA;EACAC,oBAAoB,EAAE,CAAC;EACvB;EACA;EACA;EACA;EACA;EACAC,QAAQ,EAAE,CAAC,CAAC,QAAQ,EAAE;IAClBC,IAAI,EAAE;MACFC,OAAO,EAAE,WAAW;MACpBd,IAAI,EAAE,IAAI;MACVC,IAAI,EAAE;IACV;EACJ,CAAC,CAAC,CAAC;EAEH;EACA;EACA;EACA;EACA;EACA;EACAc,SAAS,EAAE,OAAO;EAElB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,CACX,CAAC,WAAW,EAAE;IACVC,SAAS,EAAE,YAAY;IACvBC,QAAQ,EAAE,aAAa;IACvBC,WAAW,EAAE,aAAa;IAC1B;IACAC,aAAa,EAAE;IACf;EACJ,CAAC,CAAC,EAAE,MAAM,CAAC;EAEX;EACA;EACAC,SAAS,EAAE;IACPC,EAAE,EAAE,KAAK;IACTC,OAAO,EAAE;EACb;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EAGA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;AACJ,CAAC","ignoreList":[]}},"mtime":1717348499341},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\iput\\\\mobile-testing\\\\test\\\\specs\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\iput\\\\mobile-testing\",\"filename\":\"C:\\\\Users\\\\iput\\\\mobile-testing\\\\test\\\\specs\\\\loginTest.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\iput\\\\mobile-testing\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.6:test":{"value":{"code":"describe('Mobile testing - LOGIN', async () => {\n  before(async () => {\n    //cek elemen homescreen muncul dengan menggunakan xpath\n    const homescreen = await $('//android.widget.ScrollView[@content-desc=\"Home-screen\"]');\n    await expect(homescreen).toBeDisplayed();\n\n    //klik menu login menggunakan accessibility id\n    await $('~Login').click();\n\n    //cek elemen untuk memastikan berada di halaman login\n    const loginPage = await $('//android.view.ViewGroup[@content-desc=\"button-login-container\"]').getText();\n    await expect(loginPage == \"LOGIN\");\n    await driver.pause(2000);\n  });\n  it('Login with valid data - POSITIVE', async () => {\n    //mengakses field email dan memasukkan value ke dalamnya\n    emailField = await $('~input-email');\n    await emailField.setValue(\"lala@mail.co\");\n\n    //mengakses field password dan memasukkan value ke dalamnya\n    passwordField = await $('~input-password');\n    await passwordField.setValue(\"Lala.1234\");\n\n    //klik tombol login\n    buttonLogin = await $('~button-LOGIN');\n    await buttonLogin.click();\n\n    //cek muncul popup berhasil login\n    const successTitle = await $('//android.widget.TextView[@resource-id=\"android:id/alertTitle\"]');\n    const successMessage = await $('//android.widget.TextView[@resource-id=\"android:id/message\"]');\n    await expect(successTitle).toHaveText(\"Success\");\n    await expect(successMessage).toBeDisplayed();\n    await expect(successMessage).toHaveText(\"You are logged in!\");\n\n    //klik \"Ok\" untuk menutup popup\n    await $('//android.widget.Button[@resource-id=\"android:id/button1\"]').click();\n  });\n  it('Fail to login with invalid email format - NEGATIVE', async () => {\n    //mengakses field email dan memasukkan value ke dalamnya\n    await emailField.setValue(\"lala\");\n\n    //mengakses field password dan memasukkan value ke dalamnya\n    await passwordField.setValue(\"Lala.1234\");\n\n    //klik tombol login\n    await buttonLogin.click();\n\n    //cek muncul alert email tidak valid\n    const invalidEmail = await $('//android.widget.TextView[@text=\"Please enter a valid email address\"]');\n    await expect(invalidEmail).toBeExisting();\n    await expect(invalidEmail).toHaveText(\"Please enter a valid email address\");\n    await driver.pause(2000);\n  });\n  it('Fail to login with less than 8 chars password - NEGATIVE', async () => {\n    //mengakses field email dan memasukkan value ke dalamnya\n    await emailField.setValue(\"lala@mail.co\");\n\n    //mengakses field password dan memasukkan value ke dalamnya\n    await passwordField.setValue(\"Lala\");\n\n    //klik tombol login\n    await buttonLogin.click();\n\n    //cek muncul alert password minimal 8 karakter\n    const invalidPassword = await $('//android.widget.TextView[@text=\"Please enter at least 8 characters\"]');\n    await expect(invalidPassword).toBeExisting();\n    await expect(invalidPassword).toHaveText(\"Please enter at least 8 characters\");\n    await driver.pause(2000);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJkZXNjcmliZSIsImJlZm9yZSIsImhvbWVzY3JlZW4iLCIkIiwiZXhwZWN0IiwidG9CZURpc3BsYXllZCIsImNsaWNrIiwibG9naW5QYWdlIiwiZ2V0VGV4dCIsImRyaXZlciIsInBhdXNlIiwiaXQiLCJlbWFpbEZpZWxkIiwic2V0VmFsdWUiLCJwYXNzd29yZEZpZWxkIiwiYnV0dG9uTG9naW4iLCJzdWNjZXNzVGl0bGUiLCJzdWNjZXNzTWVzc2FnZSIsInRvSGF2ZVRleHQiLCJpbnZhbGlkRW1haWwiLCJ0b0JlRXhpc3RpbmciLCJpbnZhbGlkUGFzc3dvcmQiXSwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcaXB1dFxcbW9iaWxlLXRlc3RpbmdcXHRlc3RcXHNwZWNzXFwiLCJzb3VyY2VzIjpbImxvZ2luVGVzdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJkZXNjcmliZSgnTW9iaWxlIHRlc3RpbmcgLSBMT0dJTicsIGFzeW5jICgpID0+IHtcclxuICAgIGJlZm9yZSggYXN5bmMgKCkgPT4ge1xyXG4gICAgICAgIC8vY2VrIGVsZW1lbiBob21lc2NyZWVuIG11bmN1bCBkZW5nYW4gbWVuZ2d1bmFrYW4geHBhdGhcclxuICAgICAgICBjb25zdCBob21lc2NyZWVuID0gYXdhaXQgJCgnLy9hbmRyb2lkLndpZGdldC5TY3JvbGxWaWV3W0Bjb250ZW50LWRlc2M9XCJIb21lLXNjcmVlblwiXScpO1xyXG4gICAgICAgIGF3YWl0IGV4cGVjdChob21lc2NyZWVuKS50b0JlRGlzcGxheWVkKCk7XHJcblxyXG4gICAgICAgIC8va2xpayBtZW51IGxvZ2luIG1lbmdndW5ha2FuIGFjY2Vzc2liaWxpdHkgaWRcclxuICAgICAgICBhd2FpdCAkKCd+TG9naW4nKS5jbGljaygpO1xyXG5cclxuICAgICAgICAvL2NlayBlbGVtZW4gdW50dWsgbWVtYXN0aWthbiBiZXJhZGEgZGkgaGFsYW1hbiBsb2dpblxyXG4gICAgICAgIGNvbnN0IGxvZ2luUGFnZSA9IGF3YWl0ICQoJy8vYW5kcm9pZC52aWV3LlZpZXdHcm91cFtAY29udGVudC1kZXNjPVwiYnV0dG9uLWxvZ2luLWNvbnRhaW5lclwiXScpLmdldFRleHQoKTtcclxuICAgICAgICBhd2FpdCBleHBlY3QobG9naW5QYWdlID09IFwiTE9HSU5cIik7XHJcblxyXG4gICAgICAgIGF3YWl0IGRyaXZlci5wYXVzZSgyMDAwKTtcclxuICAgICAgfSk7XHJcblxyXG4gICAgaXQoJ0xvZ2luIHdpdGggdmFsaWQgZGF0YSAtIFBPU0lUSVZFJywgYXN5bmMgKCkgPT4ge1xyXG4gICAgICAgIC8vbWVuZ2Frc2VzIGZpZWxkIGVtYWlsIGRhbiBtZW1hc3Vra2FuIHZhbHVlIGtlIGRhbGFtbnlhXHJcbiAgICAgICAgZW1haWxGaWVsZCA9IGF3YWl0ICQoJ35pbnB1dC1lbWFpbCcpO1xyXG4gICAgICAgIGF3YWl0IGVtYWlsRmllbGQuc2V0VmFsdWUoXCJsYWxhQG1haWwuY29cIik7XHJcblxyXG4gICAgICAgIC8vbWVuZ2Frc2VzIGZpZWxkIHBhc3N3b3JkIGRhbiBtZW1hc3Vra2FuIHZhbHVlIGtlIGRhbGFtbnlhXHJcbiAgICAgICAgcGFzc3dvcmRGaWVsZCA9IGF3YWl0ICQoJ35pbnB1dC1wYXNzd29yZCcpO1xyXG4gICAgICAgIGF3YWl0IHBhc3N3b3JkRmllbGQuc2V0VmFsdWUoXCJMYWxhLjEyMzRcIik7XHJcblxyXG4gICAgICAgIC8va2xpayB0b21ib2wgbG9naW5cclxuICAgICAgICBidXR0b25Mb2dpbiA9IGF3YWl0ICQoJ35idXR0b24tTE9HSU4nKTtcclxuICAgICAgICBhd2FpdCBidXR0b25Mb2dpbi5jbGljaygpO1xyXG5cclxuICAgICAgICAvL2NlayBtdW5jdWwgcG9wdXAgYmVyaGFzaWwgbG9naW5cclxuICAgICAgICBjb25zdCBzdWNjZXNzVGl0bGUgPSBhd2FpdCAkKCcvL2FuZHJvaWQud2lkZ2V0LlRleHRWaWV3W0ByZXNvdXJjZS1pZD1cImFuZHJvaWQ6aWQvYWxlcnRUaXRsZVwiXScpXHJcbiAgICAgICAgY29uc3Qgc3VjY2Vzc01lc3NhZ2UgPSBhd2FpdCAkKCcvL2FuZHJvaWQud2lkZ2V0LlRleHRWaWV3W0ByZXNvdXJjZS1pZD1cImFuZHJvaWQ6aWQvbWVzc2FnZVwiXScpXHJcbiAgICAgICAgYXdhaXQgZXhwZWN0KHN1Y2Nlc3NUaXRsZSkudG9IYXZlVGV4dChcIlN1Y2Nlc3NcIik7XHJcbiAgICAgICAgYXdhaXQgZXhwZWN0KHN1Y2Nlc3NNZXNzYWdlKS50b0JlRGlzcGxheWVkKCk7XHJcbiAgICAgICAgYXdhaXQgZXhwZWN0KHN1Y2Nlc3NNZXNzYWdlKS50b0hhdmVUZXh0KFwiWW91IGFyZSBsb2dnZWQgaW4hXCIpO1xyXG5cclxuICAgICAgICAvL2tsaWsgXCJPa1wiIHVudHVrIG1lbnV0dXAgcG9wdXBcclxuICAgICAgICBhd2FpdCAkKCcvL2FuZHJvaWQud2lkZ2V0LkJ1dHRvbltAcmVzb3VyY2UtaWQ9XCJhbmRyb2lkOmlkL2J1dHRvbjFcIl0nKS5jbGljaygpO1xyXG4gICAgfSlcclxuXHJcbiAgICBpdCgnRmFpbCB0byBsb2dpbiB3aXRoIGludmFsaWQgZW1haWwgZm9ybWF0IC0gTkVHQVRJVkUnLCBhc3luYyAoKSA9PiB7XHJcbiAgICAgICAgLy9tZW5nYWtzZXMgZmllbGQgZW1haWwgZGFuIG1lbWFzdWtrYW4gdmFsdWUga2UgZGFsYW1ueWFcclxuICAgICAgICBhd2FpdCBlbWFpbEZpZWxkLnNldFZhbHVlKFwibGFsYVwiKTtcclxuXHJcbiAgICAgICAgLy9tZW5nYWtzZXMgZmllbGQgcGFzc3dvcmQgZGFuIG1lbWFzdWtrYW4gdmFsdWUga2UgZGFsYW1ueWFcclxuICAgICAgICBhd2FpdCBwYXNzd29yZEZpZWxkLnNldFZhbHVlKFwiTGFsYS4xMjM0XCIpO1xyXG5cclxuICAgICAgICAvL2tsaWsgdG9tYm9sIGxvZ2luXHJcbiAgICAgICAgYXdhaXQgYnV0dG9uTG9naW4uY2xpY2soKTtcclxuXHJcbiAgICAgICAgLy9jZWsgbXVuY3VsIGFsZXJ0IGVtYWlsIHRpZGFrIHZhbGlkXHJcbiAgICAgICAgY29uc3QgaW52YWxpZEVtYWlsID0gYXdhaXQgJCgnLy9hbmRyb2lkLndpZGdldC5UZXh0Vmlld1tAdGV4dD1cIlBsZWFzZSBlbnRlciBhIHZhbGlkIGVtYWlsIGFkZHJlc3NcIl0nKTtcclxuICAgICAgICBhd2FpdCBleHBlY3QoaW52YWxpZEVtYWlsKS50b0JlRXhpc3RpbmcoKTtcclxuICAgICAgICBhd2FpdCBleHBlY3QoaW52YWxpZEVtYWlsKS50b0hhdmVUZXh0KFwiUGxlYXNlIGVudGVyIGEgdmFsaWQgZW1haWwgYWRkcmVzc1wiKTtcclxuXHJcbiAgICAgICAgYXdhaXQgZHJpdmVyLnBhdXNlKDIwMDApO1xyXG4gICAgfSlcclxuXHJcbiAgICBpdCgnRmFpbCB0byBsb2dpbiB3aXRoIGxlc3MgdGhhbiA4IGNoYXJzIHBhc3N3b3JkIC0gTkVHQVRJVkUnLCBhc3luYyAoKSA9PiB7XHJcbiAgICAgICAgLy9tZW5nYWtzZXMgZmllbGQgZW1haWwgZGFuIG1lbWFzdWtrYW4gdmFsdWUga2UgZGFsYW1ueWFcclxuICAgICAgICBhd2FpdCBlbWFpbEZpZWxkLnNldFZhbHVlKFwibGFsYUBtYWlsLmNvXCIpO1xyXG5cclxuICAgICAgICAvL21lbmdha3NlcyBmaWVsZCBwYXNzd29yZCBkYW4gbWVtYXN1a2thbiB2YWx1ZSBrZSBkYWxhbW55YVxyXG4gICAgICAgIGF3YWl0IHBhc3N3b3JkRmllbGQuc2V0VmFsdWUoXCJMYWxhXCIpO1xyXG5cclxuICAgICAgICAvL2tsaWsgdG9tYm9sIGxvZ2luXHJcbiAgICAgICAgYXdhaXQgYnV0dG9uTG9naW4uY2xpY2soKTtcclxuXHJcbiAgICAgICAgLy9jZWsgbXVuY3VsIGFsZXJ0IHBhc3N3b3JkIG1pbmltYWwgOCBrYXJha3RlclxyXG4gICAgICAgIGNvbnN0IGludmFsaWRQYXNzd29yZCA9IGF3YWl0ICQoJy8vYW5kcm9pZC53aWRnZXQuVGV4dFZpZXdbQHRleHQ9XCJQbGVhc2UgZW50ZXIgYXQgbGVhc3QgOCBjaGFyYWN0ZXJzXCJdJyk7XHJcbiAgICAgICAgYXdhaXQgZXhwZWN0KGludmFsaWRQYXNzd29yZCkudG9CZUV4aXN0aW5nKCk7XHJcbiAgICAgICAgYXdhaXQgZXhwZWN0KGludmFsaWRQYXNzd29yZCkudG9IYXZlVGV4dChcIlBsZWFzZSBlbnRlciBhdCBsZWFzdCA4IGNoYXJhY3RlcnNcIik7XHJcblxyXG4gICAgICAgIGF3YWl0IGRyaXZlci5wYXVzZSgyMDAwKTtcclxuICAgIH0pXHJcbn0pIl0sIm1hcHBpbmdzIjoiQUFBQUEsUUFBUSxDQUFDLHdCQUF3QixFQUFFLFlBQVk7RUFDM0NDLE1BQU0sQ0FBRSxZQUFZO0lBQ2hCO0lBQ0EsTUFBTUMsVUFBVSxHQUFHLE1BQU1DLENBQUMsQ0FBQywwREFBMEQsQ0FBQztJQUN0RixNQUFNQyxNQUFNLENBQUNGLFVBQVUsQ0FBQyxDQUFDRyxhQUFhLENBQUMsQ0FBQzs7SUFFeEM7SUFDQSxNQUFNRixDQUFDLENBQUMsUUFBUSxDQUFDLENBQUNHLEtBQUssQ0FBQyxDQUFDOztJQUV6QjtJQUNBLE1BQU1DLFNBQVMsR0FBRyxNQUFNSixDQUFDLENBQUMsa0VBQWtFLENBQUMsQ0FBQ0ssT0FBTyxDQUFDLENBQUM7SUFDdkcsTUFBTUosTUFBTSxDQUFDRyxTQUFTLElBQUksT0FBTyxDQUFDO0lBRWxDLE1BQU1FLE1BQU0sQ0FBQ0MsS0FBSyxDQUFDLElBQUksQ0FBQztFQUMxQixDQUFDLENBQUM7RUFFSkMsRUFBRSxDQUFDLGtDQUFrQyxFQUFFLFlBQVk7SUFDL0M7SUFDQUMsVUFBVSxHQUFHLE1BQU1ULENBQUMsQ0FBQyxjQUFjLENBQUM7SUFDcEMsTUFBTVMsVUFBVSxDQUFDQyxRQUFRLENBQUMsY0FBYyxDQUFDOztJQUV6QztJQUNBQyxhQUFhLEdBQUcsTUFBTVgsQ0FBQyxDQUFDLGlCQUFpQixDQUFDO0lBQzFDLE1BQU1XLGFBQWEsQ0FBQ0QsUUFBUSxDQUFDLFdBQVcsQ0FBQzs7SUFFekM7SUFDQUUsV0FBVyxHQUFHLE1BQU1aLENBQUMsQ0FBQyxlQUFlLENBQUM7SUFDdEMsTUFBTVksV0FBVyxDQUFDVCxLQUFLLENBQUMsQ0FBQzs7SUFFekI7SUFDQSxNQUFNVSxZQUFZLEdBQUcsTUFBTWIsQ0FBQyxDQUFDLGlFQUFpRSxDQUFDO0lBQy9GLE1BQU1jLGNBQWMsR0FBRyxNQUFNZCxDQUFDLENBQUMsOERBQThELENBQUM7SUFDOUYsTUFBTUMsTUFBTSxDQUFDWSxZQUFZLENBQUMsQ0FBQ0UsVUFBVSxDQUFDLFNBQVMsQ0FBQztJQUNoRCxNQUFNZCxNQUFNLENBQUNhLGNBQWMsQ0FBQyxDQUFDWixhQUFhLENBQUMsQ0FBQztJQUM1QyxNQUFNRCxNQUFNLENBQUNhLGNBQWMsQ0FBQyxDQUFDQyxVQUFVLENBQUMsb0JBQW9CLENBQUM7O0lBRTdEO0lBQ0EsTUFBTWYsQ0FBQyxDQUFDLDREQUE0RCxDQUFDLENBQUNHLEtBQUssQ0FBQyxDQUFDO0VBQ2pGLENBQUMsQ0FBQztFQUVGSyxFQUFFLENBQUMsb0RBQW9ELEVBQUUsWUFBWTtJQUNqRTtJQUNBLE1BQU1DLFVBQVUsQ0FBQ0MsUUFBUSxDQUFDLE1BQU0sQ0FBQzs7SUFFakM7SUFDQSxNQUFNQyxhQUFhLENBQUNELFFBQVEsQ0FBQyxXQUFXLENBQUM7O0lBRXpDO0lBQ0EsTUFBTUUsV0FBVyxDQUFDVCxLQUFLLENBQUMsQ0FBQzs7SUFFekI7SUFDQSxNQUFNYSxZQUFZLEdBQUcsTUFBTWhCLENBQUMsQ0FBQyx1RUFBdUUsQ0FBQztJQUNyRyxNQUFNQyxNQUFNLENBQUNlLFlBQVksQ0FBQyxDQUFDQyxZQUFZLENBQUMsQ0FBQztJQUN6QyxNQUFNaEIsTUFBTSxDQUFDZSxZQUFZLENBQUMsQ0FBQ0QsVUFBVSxDQUFDLG9DQUFvQyxDQUFDO0lBRTNFLE1BQU1ULE1BQU0sQ0FBQ0MsS0FBSyxDQUFDLElBQUksQ0FBQztFQUM1QixDQUFDLENBQUM7RUFFRkMsRUFBRSxDQUFDLDBEQUEwRCxFQUFFLFlBQVk7SUFDdkU7SUFDQSxNQUFNQyxVQUFVLENBQUNDLFFBQVEsQ0FBQyxjQUFjLENBQUM7O0lBRXpDO0lBQ0EsTUFBTUMsYUFBYSxDQUFDRCxRQUFRLENBQUMsTUFBTSxDQUFDOztJQUVwQztJQUNBLE1BQU1FLFdBQVcsQ0FBQ1QsS0FBSyxDQUFDLENBQUM7O0lBRXpCO0lBQ0EsTUFBTWUsZUFBZSxHQUFHLE1BQU1sQixDQUFDLENBQUMsdUVBQXVFLENBQUM7SUFDeEcsTUFBTUMsTUFBTSxDQUFDaUIsZUFBZSxDQUFDLENBQUNELFlBQVksQ0FBQyxDQUFDO0lBQzVDLE1BQU1oQixNQUFNLENBQUNpQixlQUFlLENBQUMsQ0FBQ0gsVUFBVSxDQUFDLG9DQUFvQyxDQUFDO0lBRTlFLE1BQU1ULE1BQU0sQ0FBQ0MsS0FBSyxDQUFDLElBQUksQ0FBQztFQUM1QixDQUFDLENBQUM7QUFDTixDQUFDLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=","map":{"version":3,"names":["describe","before","homescreen","$","expect","toBeDisplayed","click","loginPage","getText","driver","pause","it","emailField","setValue","passwordField","buttonLogin","successTitle","successMessage","toHaveText","invalidEmail","toBeExisting","invalidPassword"],"sourceRoot":"C:\\Users\\iput\\mobile-testing\\test\\specs\\","sources":["loginTest.js"],"sourcesContent":["describe('Mobile testing - LOGIN', async () => {\r\n    before( async () => {\r\n        //cek elemen homescreen muncul dengan menggunakan xpath\r\n        const homescreen = await $('//android.widget.ScrollView[@content-desc=\"Home-screen\"]');\r\n        await expect(homescreen).toBeDisplayed();\r\n\r\n        //klik menu login menggunakan accessibility id\r\n        await $('~Login').click();\r\n\r\n        //cek elemen untuk memastikan berada di halaman login\r\n        const loginPage = await $('//android.view.ViewGroup[@content-desc=\"button-login-container\"]').getText();\r\n        await expect(loginPage == \"LOGIN\");\r\n\r\n        await driver.pause(2000);\r\n      });\r\n\r\n    it('Login with valid data - POSITIVE', async () => {\r\n        //mengakses field email dan memasukkan value ke dalamnya\r\n        emailField = await $('~input-email');\r\n        await emailField.setValue(\"lala@mail.co\");\r\n\r\n        //mengakses field password dan memasukkan value ke dalamnya\r\n        passwordField = await $('~input-password');\r\n        await passwordField.setValue(\"Lala.1234\");\r\n\r\n        //klik tombol login\r\n        buttonLogin = await $('~button-LOGIN');\r\n        await buttonLogin.click();\r\n\r\n        //cek muncul popup berhasil login\r\n        const successTitle = await $('//android.widget.TextView[@resource-id=\"android:id/alertTitle\"]')\r\n        const successMessage = await $('//android.widget.TextView[@resource-id=\"android:id/message\"]')\r\n        await expect(successTitle).toHaveText(\"Success\");\r\n        await expect(successMessage).toBeDisplayed();\r\n        await expect(successMessage).toHaveText(\"You are logged in!\");\r\n\r\n        //klik \"Ok\" untuk menutup popup\r\n        await $('//android.widget.Button[@resource-id=\"android:id/button1\"]').click();\r\n    })\r\n\r\n    it('Fail to login with invalid email format - NEGATIVE', async () => {\r\n        //mengakses field email dan memasukkan value ke dalamnya\r\n        await emailField.setValue(\"lala\");\r\n\r\n        //mengakses field password dan memasukkan value ke dalamnya\r\n        await passwordField.setValue(\"Lala.1234\");\r\n\r\n        //klik tombol login\r\n        await buttonLogin.click();\r\n\r\n        //cek muncul alert email tidak valid\r\n        const invalidEmail = await $('//android.widget.TextView[@text=\"Please enter a valid email address\"]');\r\n        await expect(invalidEmail).toBeExisting();\r\n        await expect(invalidEmail).toHaveText(\"Please enter a valid email address\");\r\n\r\n        await driver.pause(2000);\r\n    })\r\n\r\n    it('Fail to login with less than 8 chars password - NEGATIVE', async () => {\r\n        //mengakses field email dan memasukkan value ke dalamnya\r\n        await emailField.setValue(\"lala@mail.co\");\r\n\r\n        //mengakses field password dan memasukkan value ke dalamnya\r\n        await passwordField.setValue(\"Lala\");\r\n\r\n        //klik tombol login\r\n        await buttonLogin.click();\r\n\r\n        //cek muncul alert password minimal 8 karakter\r\n        const invalidPassword = await $('//android.widget.TextView[@text=\"Please enter at least 8 characters\"]');\r\n        await expect(invalidPassword).toBeExisting();\r\n        await expect(invalidPassword).toHaveText(\"Please enter at least 8 characters\");\r\n\r\n        await driver.pause(2000);\r\n    })\r\n})"],"mappings":"AAAAA,QAAQ,CAAC,wBAAwB,EAAE,YAAY;EAC3CC,MAAM,CAAE,YAAY;IAChB;IACA,MAAMC,UAAU,GAAG,MAAMC,CAAC,CAAC,0DAA0D,CAAC;IACtF,MAAMC,MAAM,CAACF,UAAU,CAAC,CAACG,aAAa,CAAC,CAAC;;IAExC;IACA,MAAMF,CAAC,CAAC,QAAQ,CAAC,CAACG,KAAK,CAAC,CAAC;;IAEzB;IACA,MAAMC,SAAS,GAAG,MAAMJ,CAAC,CAAC,kEAAkE,CAAC,CAACK,OAAO,CAAC,CAAC;IACvG,MAAMJ,MAAM,CAACG,SAAS,IAAI,OAAO,CAAC;IAElC,MAAME,MAAM,CAACC,KAAK,CAAC,IAAI,CAAC;EAC1B,CAAC,CAAC;EAEJC,EAAE,CAAC,kCAAkC,EAAE,YAAY;IAC/C;IACAC,UAAU,GAAG,MAAMT,CAAC,CAAC,cAAc,CAAC;IACpC,MAAMS,UAAU,CAACC,QAAQ,CAAC,cAAc,CAAC;;IAEzC;IACAC,aAAa,GAAG,MAAMX,CAAC,CAAC,iBAAiB,CAAC;IAC1C,MAAMW,aAAa,CAACD,QAAQ,CAAC,WAAW,CAAC;;IAEzC;IACAE,WAAW,GAAG,MAAMZ,CAAC,CAAC,eAAe,CAAC;IACtC,MAAMY,WAAW,CAACT,KAAK,CAAC,CAAC;;IAEzB;IACA,MAAMU,YAAY,GAAG,MAAMb,CAAC,CAAC,iEAAiE,CAAC;IAC/F,MAAMc,cAAc,GAAG,MAAMd,CAAC,CAAC,8DAA8D,CAAC;IAC9F,MAAMC,MAAM,CAACY,YAAY,CAAC,CAACE,UAAU,CAAC,SAAS,CAAC;IAChD,MAAMd,MAAM,CAACa,cAAc,CAAC,CAACZ,aAAa,CAAC,CAAC;IAC5C,MAAMD,MAAM,CAACa,cAAc,CAAC,CAACC,UAAU,CAAC,oBAAoB,CAAC;;IAE7D;IACA,MAAMf,CAAC,CAAC,4DAA4D,CAAC,CAACG,KAAK,CAAC,CAAC;EACjF,CAAC,CAAC;EAEFK,EAAE,CAAC,oDAAoD,EAAE,YAAY;IACjE;IACA,MAAMC,UAAU,CAACC,QAAQ,CAAC,MAAM,CAAC;;IAEjC;IACA,MAAMC,aAAa,CAACD,QAAQ,CAAC,WAAW,CAAC;;IAEzC;IACA,MAAME,WAAW,CAACT,KAAK,CAAC,CAAC;;IAEzB;IACA,MAAMa,YAAY,GAAG,MAAMhB,CAAC,CAAC,uEAAuE,CAAC;IACrG,MAAMC,MAAM,CAACe,YAAY,CAAC,CAACC,YAAY,CAAC,CAAC;IACzC,MAAMhB,MAAM,CAACe,YAAY,CAAC,CAACD,UAAU,CAAC,oCAAoC,CAAC;IAE3E,MAAMT,MAAM,CAACC,KAAK,CAAC,IAAI,CAAC;EAC5B,CAAC,CAAC;EAEFC,EAAE,CAAC,0DAA0D,EAAE,YAAY;IACvE;IACA,MAAMC,UAAU,CAACC,QAAQ,CAAC,cAAc,CAAC;;IAEzC;IACA,MAAMC,aAAa,CAACD,QAAQ,CAAC,MAAM,CAAC;;IAEpC;IACA,MAAME,WAAW,CAACT,KAAK,CAAC,CAAC;;IAEzB;IACA,MAAMe,eAAe,GAAG,MAAMlB,CAAC,CAAC,uEAAuE,CAAC;IACxG,MAAMC,MAAM,CAACiB,eAAe,CAAC,CAACD,YAAY,CAAC,CAAC;IAC5C,MAAMhB,MAAM,CAACiB,eAAe,CAAC,CAACH,UAAU,CAAC,oCAAoC,CAAC;IAE9E,MAAMT,MAAM,CAACC,KAAK,CAAC,IAAI,CAAC;EAC5B,CAAC,CAAC;AACN,CAAC,CAAC","ignoreList":[]}},"mtime":1717347856585},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\iput\\\\mobile-testing\\\\test\\\\specs\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\iput\\\\mobile-testing\",\"filename\":\"C:\\\\Users\\\\iput\\\\mobile-testing\\\\test\\\\specs\\\\formTest.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\iput\\\\mobile-testing\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.6:test":{"value":{"code":"describe('Mobile testing - FORMS', () => {\n  before(async () => {\n    //klik menu forms menggunakan accessibility id\n    await $('~Forms').click();\n\n    //cek elemen untuk memastikan berada di halaman forms\n    const formsPage = await $('~Forms-screen');\n    await expect(formsPage).toBeDisplayed();\n    await driver.pause(2000);\n  });\n  it('Verify text displayed is same as inputted', async () => {\n    //mengakses input field dan memasukkan value ke dalamnya\n    const inputField = await $('~text-input');\n    const text = \"halo, nama saya LALA\";\n    await inputField.setValue(text);\n\n    //cek teks di \"You have typed\" field sesuai dengan yang sudah dimasukkan\n    const inputTextResult = await $('~input-text-result');\n    await expect(inputTextResult).toHaveText(text);\n  });\n  it('Verify switch button works well', async () => {\n    //kondisi awal sebelum klik switch button\n    const switchText = await $('~switch-text').getText();\n    await expect(switchText == \"Click to turn the switch ON\");\n\n    //klik switch button ON\n    await $('~switch').click();\n\n    //cek teks berubah setelah klik switch button\n    await expect(switchText == \"Click to turn the switch OFF\");\n\n    //klik switch button OFF\n    await $('~switch').click();\n\n    //cek teks berubah setelah klik switch button\n    await expect(switchText == \"Click to turn the switch ON\");\n    await driver.pause(2000);\n  });\n  it('Verify dropdown list showed and user can choose an item', async () => {\n    //kondisi awal sebelum klik switch button\n    const dropdown = await $('//android.widget.EditText[@resource-id=\"text_input\"]');\n    await expect(dropdown).toHaveText(\"Select an item...\");\n\n    //klik dropdown\n    await dropdown.click();\n\n    //cek muncul list dropdown\n    const dropdownList = await $('//android.widget.ListView[@resource-id=\"com.wdiodemoapp:id/select_dialog_listview\"]');\n    await expect(dropdownList).toBeDisplayed();\n\n    //klik salah satu opsi\n    await $('//android.widget.CheckedTextView[@resource-id=\"android:id/text1\" and @text=\"Appium is awesome\"]').click();\n\n    //cek opsi berhasil terpilih\n    await dropdown.getText();\n    await expect(dropdown).toHaveText(\"Appium is awesome\");\n    await driver.pause(2000);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJkZXNjcmliZSIsImJlZm9yZSIsIiQiLCJjbGljayIsImZvcm1zUGFnZSIsImV4cGVjdCIsInRvQmVEaXNwbGF5ZWQiLCJkcml2ZXIiLCJwYXVzZSIsIml0IiwiaW5wdXRGaWVsZCIsInRleHQiLCJzZXRWYWx1ZSIsImlucHV0VGV4dFJlc3VsdCIsInRvSGF2ZVRleHQiLCJzd2l0Y2hUZXh0IiwiZ2V0VGV4dCIsImRyb3Bkb3duIiwiZHJvcGRvd25MaXN0Il0sInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGlwdXRcXG1vYmlsZS10ZXN0aW5nXFx0ZXN0XFxzcGVjc1xcIiwic291cmNlcyI6WyJmb3JtVGVzdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJkZXNjcmliZSgnTW9iaWxlIHRlc3RpbmcgLSBGT1JNUycsICgpID0+IHtcclxuICAgIGJlZm9yZSggYXN5bmMgKCkgPT4ge1xyXG4gICAgICAgIC8va2xpayBtZW51IGZvcm1zIG1lbmdndW5ha2FuIGFjY2Vzc2liaWxpdHkgaWRcclxuICAgICAgICBhd2FpdCAkKCd+Rm9ybXMnKS5jbGljaygpO1xyXG5cclxuICAgICAgICAvL2NlayBlbGVtZW4gdW50dWsgbWVtYXN0aWthbiBiZXJhZGEgZGkgaGFsYW1hbiBmb3Jtc1xyXG4gICAgICAgIGNvbnN0IGZvcm1zUGFnZSA9IGF3YWl0ICQoJ35Gb3Jtcy1zY3JlZW4nKTtcclxuICAgICAgICBhd2FpdCBleHBlY3QoZm9ybXNQYWdlKS50b0JlRGlzcGxheWVkKCk7XHJcblxyXG4gICAgICAgIGF3YWl0IGRyaXZlci5wYXVzZSgyMDAwKTtcclxuICAgICAgfSk7XHJcblxyXG4gICAgaXQoJ1ZlcmlmeSB0ZXh0IGRpc3BsYXllZCBpcyBzYW1lIGFzIGlucHV0dGVkJywgYXN5bmMgKCkgPT4ge1xyXG4gICAgICAgIC8vbWVuZ2Frc2VzIGlucHV0IGZpZWxkIGRhbiBtZW1hc3Vra2FuIHZhbHVlIGtlIGRhbGFtbnlhXHJcbiAgICAgICAgY29uc3QgaW5wdXRGaWVsZCA9IGF3YWl0ICQoJ350ZXh0LWlucHV0Jyk7XHJcbiAgICAgICAgY29uc3QgdGV4dCA9IFwiaGFsbywgbmFtYSBzYXlhIExBTEFcIjtcclxuICAgICAgICBhd2FpdCBpbnB1dEZpZWxkLnNldFZhbHVlKHRleHQpO1xyXG5cclxuICAgICAgICAvL2NlayB0ZWtzIGRpIFwiWW91IGhhdmUgdHlwZWRcIiBmaWVsZCBzZXN1YWkgZGVuZ2FuIHlhbmcgc3VkYWggZGltYXN1a2thblxyXG4gICAgICAgIGNvbnN0IGlucHV0VGV4dFJlc3VsdCA9IGF3YWl0ICQoJ35pbnB1dC10ZXh0LXJlc3VsdCcpO1xyXG4gICAgICAgIGF3YWl0IGV4cGVjdChpbnB1dFRleHRSZXN1bHQpLnRvSGF2ZVRleHQodGV4dCk7XHJcbiAgICB9KVxyXG5cclxuICAgIGl0KCdWZXJpZnkgc3dpdGNoIGJ1dHRvbiB3b3JrcyB3ZWxsJywgYXN5bmMgKCkgPT4ge1xyXG4gICAgICAgIC8va29uZGlzaSBhd2FsIHNlYmVsdW0ga2xpayBzd2l0Y2ggYnV0dG9uXHJcbiAgICAgICAgY29uc3Qgc3dpdGNoVGV4dCA9IGF3YWl0ICQoJ35zd2l0Y2gtdGV4dCcpLmdldFRleHQoKTtcclxuICAgICAgICBhd2FpdCBleHBlY3Qoc3dpdGNoVGV4dCA9PSBcIkNsaWNrIHRvIHR1cm4gdGhlIHN3aXRjaCBPTlwiKTtcclxuXHJcbiAgICAgICAgLy9rbGlrIHN3aXRjaCBidXR0b24gT05cclxuICAgICAgICBhd2FpdCAkKCd+c3dpdGNoJykuY2xpY2soKTtcclxuXHJcbiAgICAgICAgLy9jZWsgdGVrcyBiZXJ1YmFoIHNldGVsYWgga2xpayBzd2l0Y2ggYnV0dG9uXHJcbiAgICAgICAgYXdhaXQgZXhwZWN0KHN3aXRjaFRleHQgPT0gXCJDbGljayB0byB0dXJuIHRoZSBzd2l0Y2ggT0ZGXCIpO1xyXG5cclxuICAgICAgICAvL2tsaWsgc3dpdGNoIGJ1dHRvbiBPRkZcclxuICAgICAgICBhd2FpdCAkKCd+c3dpdGNoJykuY2xpY2soKTtcclxuXHJcbiAgICAgICAgLy9jZWsgdGVrcyBiZXJ1YmFoIHNldGVsYWgga2xpayBzd2l0Y2ggYnV0dG9uXHJcbiAgICAgICAgYXdhaXQgZXhwZWN0KHN3aXRjaFRleHQgPT0gXCJDbGljayB0byB0dXJuIHRoZSBzd2l0Y2ggT05cIik7XHJcblxyXG4gICAgICAgIGF3YWl0IGRyaXZlci5wYXVzZSgyMDAwKTtcclxuICAgIH0pXHJcblxyXG4gICAgaXQoJ1ZlcmlmeSBkcm9wZG93biBsaXN0IHNob3dlZCBhbmQgdXNlciBjYW4gY2hvb3NlIGFuIGl0ZW0nLCBhc3luYyAoKSA9PiB7XHJcbiAgICAgICAgLy9rb25kaXNpIGF3YWwgc2ViZWx1bSBrbGlrIHN3aXRjaCBidXR0b25cclxuICAgICAgICBjb25zdCBkcm9wZG93biA9IGF3YWl0ICQoJy8vYW5kcm9pZC53aWRnZXQuRWRpdFRleHRbQHJlc291cmNlLWlkPVwidGV4dF9pbnB1dFwiXScpO1xyXG4gICAgICAgIGF3YWl0IGV4cGVjdChkcm9wZG93bikudG9IYXZlVGV4dChcIlNlbGVjdCBhbiBpdGVtLi4uXCIpO1xyXG5cclxuICAgICAgICAvL2tsaWsgZHJvcGRvd25cclxuICAgICAgICBhd2FpdCBkcm9wZG93bi5jbGljaygpO1xyXG5cclxuICAgICAgICAvL2NlayBtdW5jdWwgbGlzdCBkcm9wZG93blxyXG4gICAgICAgIGNvbnN0IGRyb3Bkb3duTGlzdCA9IGF3YWl0ICQoJy8vYW5kcm9pZC53aWRnZXQuTGlzdFZpZXdbQHJlc291cmNlLWlkPVwiY29tLndkaW9kZW1vYXBwOmlkL3NlbGVjdF9kaWFsb2dfbGlzdHZpZXdcIl0nKTtcclxuICAgICAgICBhd2FpdCBleHBlY3QoZHJvcGRvd25MaXN0KS50b0JlRGlzcGxheWVkKCk7XHJcblxyXG4gICAgICAgIC8va2xpayBzYWxhaCBzYXR1IG9wc2lcclxuICAgICAgICBhd2FpdCAkKCcvL2FuZHJvaWQud2lkZ2V0LkNoZWNrZWRUZXh0Vmlld1tAcmVzb3VyY2UtaWQ9XCJhbmRyb2lkOmlkL3RleHQxXCIgYW5kIEB0ZXh0PVwiQXBwaXVtIGlzIGF3ZXNvbWVcIl0nKS5jbGljaygpO1xyXG5cclxuICAgICAgICAvL2NlayBvcHNpIGJlcmhhc2lsIHRlcnBpbGloXHJcbiAgICAgICAgYXdhaXQgZHJvcGRvd24uZ2V0VGV4dCgpO1xyXG4gICAgICAgIGF3YWl0IGV4cGVjdChkcm9wZG93bikudG9IYXZlVGV4dChcIkFwcGl1bSBpcyBhd2Vzb21lXCIpO1xyXG5cclxuICAgICAgICBhd2FpdCBkcml2ZXIucGF1c2UoMjAwMCk7XHJcbiAgICB9KVxyXG59KSJdLCJtYXBwaW5ncyI6IkFBQUFBLFFBQVEsQ0FBQyx3QkFBd0IsRUFBRSxNQUFNO0VBQ3JDQyxNQUFNLENBQUUsWUFBWTtJQUNoQjtJQUNBLE1BQU1DLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQ0MsS0FBSyxDQUFDLENBQUM7O0lBRXpCO0lBQ0EsTUFBTUMsU0FBUyxHQUFHLE1BQU1GLENBQUMsQ0FBQyxlQUFlLENBQUM7SUFDMUMsTUFBTUcsTUFBTSxDQUFDRCxTQUFTLENBQUMsQ0FBQ0UsYUFBYSxDQUFDLENBQUM7SUFFdkMsTUFBTUMsTUFBTSxDQUFDQyxLQUFLLENBQUMsSUFBSSxDQUFDO0VBQzFCLENBQUMsQ0FBQztFQUVKQyxFQUFFLENBQUMsMkNBQTJDLEVBQUUsWUFBWTtJQUN4RDtJQUNBLE1BQU1DLFVBQVUsR0FBRyxNQUFNUixDQUFDLENBQUMsYUFBYSxDQUFDO0lBQ3pDLE1BQU1TLElBQUksR0FBRyxzQkFBc0I7SUFDbkMsTUFBTUQsVUFBVSxDQUFDRSxRQUFRLENBQUNELElBQUksQ0FBQzs7SUFFL0I7SUFDQSxNQUFNRSxlQUFlLEdBQUcsTUFBTVgsQ0FBQyxDQUFDLG9CQUFvQixDQUFDO0lBQ3JELE1BQU1HLE1BQU0sQ0FBQ1EsZUFBZSxDQUFDLENBQUNDLFVBQVUsQ0FBQ0gsSUFBSSxDQUFDO0VBQ2xELENBQUMsQ0FBQztFQUVGRixFQUFFLENBQUMsaUNBQWlDLEVBQUUsWUFBWTtJQUM5QztJQUNBLE1BQU1NLFVBQVUsR0FBRyxNQUFNYixDQUFDLENBQUMsY0FBYyxDQUFDLENBQUNjLE9BQU8sQ0FBQyxDQUFDO0lBQ3BELE1BQU1YLE1BQU0sQ0FBQ1UsVUFBVSxJQUFJLDZCQUE2QixDQUFDOztJQUV6RDtJQUNBLE1BQU1iLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQ0MsS0FBSyxDQUFDLENBQUM7O0lBRTFCO0lBQ0EsTUFBTUUsTUFBTSxDQUFDVSxVQUFVLElBQUksOEJBQThCLENBQUM7O0lBRTFEO0lBQ0EsTUFBTWIsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDQyxLQUFLLENBQUMsQ0FBQzs7SUFFMUI7SUFDQSxNQUFNRSxNQUFNLENBQUNVLFVBQVUsSUFBSSw2QkFBNkIsQ0FBQztJQUV6RCxNQUFNUixNQUFNLENBQUNDLEtBQUssQ0FBQyxJQUFJLENBQUM7RUFDNUIsQ0FBQyxDQUFDO0VBRUZDLEVBQUUsQ0FBQyx5REFBeUQsRUFBRSxZQUFZO0lBQ3RFO0lBQ0EsTUFBTVEsUUFBUSxHQUFHLE1BQU1mLENBQUMsQ0FBQyxzREFBc0QsQ0FBQztJQUNoRixNQUFNRyxNQUFNLENBQUNZLFFBQVEsQ0FBQyxDQUFDSCxVQUFVLENBQUMsbUJBQW1CLENBQUM7O0lBRXREO0lBQ0EsTUFBTUcsUUFBUSxDQUFDZCxLQUFLLENBQUMsQ0FBQzs7SUFFdEI7SUFDQSxNQUFNZSxZQUFZLEdBQUcsTUFBTWhCLENBQUMsQ0FBQyxxRkFBcUYsQ0FBQztJQUNuSCxNQUFNRyxNQUFNLENBQUNhLFlBQVksQ0FBQyxDQUFDWixhQUFhLENBQUMsQ0FBQzs7SUFFMUM7SUFDQSxNQUFNSixDQUFDLENBQUMsaUdBQWlHLENBQUMsQ0FBQ0MsS0FBSyxDQUFDLENBQUM7O0lBRWxIO0lBQ0EsTUFBTWMsUUFBUSxDQUFDRCxPQUFPLENBQUMsQ0FBQztJQUN4QixNQUFNWCxNQUFNLENBQUNZLFFBQVEsQ0FBQyxDQUFDSCxVQUFVLENBQUMsbUJBQW1CLENBQUM7SUFFdEQsTUFBTVAsTUFBTSxDQUFDQyxLQUFLLENBQUMsSUFBSSxDQUFDO0VBQzVCLENBQUMsQ0FBQztBQUNOLENBQUMsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==","map":{"version":3,"names":["describe","before","$","click","formsPage","expect","toBeDisplayed","driver","pause","it","inputField","text","setValue","inputTextResult","toHaveText","switchText","getText","dropdown","dropdownList"],"sourceRoot":"C:\\Users\\iput\\mobile-testing\\test\\specs\\","sources":["formTest.js"],"sourcesContent":["describe('Mobile testing - FORMS', () => {\r\n    before( async () => {\r\n        //klik menu forms menggunakan accessibility id\r\n        await $('~Forms').click();\r\n\r\n        //cek elemen untuk memastikan berada di halaman forms\r\n        const formsPage = await $('~Forms-screen');\r\n        await expect(formsPage).toBeDisplayed();\r\n\r\n        await driver.pause(2000);\r\n      });\r\n\r\n    it('Verify text displayed is same as inputted', async () => {\r\n        //mengakses input field dan memasukkan value ke dalamnya\r\n        const inputField = await $('~text-input');\r\n        const text = \"halo, nama saya LALA\";\r\n        await inputField.setValue(text);\r\n\r\n        //cek teks di \"You have typed\" field sesuai dengan yang sudah dimasukkan\r\n        const inputTextResult = await $('~input-text-result');\r\n        await expect(inputTextResult).toHaveText(text);\r\n    })\r\n\r\n    it('Verify switch button works well', async () => {\r\n        //kondisi awal sebelum klik switch button\r\n        const switchText = await $('~switch-text').getText();\r\n        await expect(switchText == \"Click to turn the switch ON\");\r\n\r\n        //klik switch button ON\r\n        await $('~switch').click();\r\n\r\n        //cek teks berubah setelah klik switch button\r\n        await expect(switchText == \"Click to turn the switch OFF\");\r\n\r\n        //klik switch button OFF\r\n        await $('~switch').click();\r\n\r\n        //cek teks berubah setelah klik switch button\r\n        await expect(switchText == \"Click to turn the switch ON\");\r\n\r\n        await driver.pause(2000);\r\n    })\r\n\r\n    it('Verify dropdown list showed and user can choose an item', async () => {\r\n        //kondisi awal sebelum klik switch button\r\n        const dropdown = await $('//android.widget.EditText[@resource-id=\"text_input\"]');\r\n        await expect(dropdown).toHaveText(\"Select an item...\");\r\n\r\n        //klik dropdown\r\n        await dropdown.click();\r\n\r\n        //cek muncul list dropdown\r\n        const dropdownList = await $('//android.widget.ListView[@resource-id=\"com.wdiodemoapp:id/select_dialog_listview\"]');\r\n        await expect(dropdownList).toBeDisplayed();\r\n\r\n        //klik salah satu opsi\r\n        await $('//android.widget.CheckedTextView[@resource-id=\"android:id/text1\" and @text=\"Appium is awesome\"]').click();\r\n\r\n        //cek opsi berhasil terpilih\r\n        await dropdown.getText();\r\n        await expect(dropdown).toHaveText(\"Appium is awesome\");\r\n\r\n        await driver.pause(2000);\r\n    })\r\n})"],"mappings":"AAAAA,QAAQ,CAAC,wBAAwB,EAAE,MAAM;EACrCC,MAAM,CAAE,YAAY;IAChB;IACA,MAAMC,CAAC,CAAC,QAAQ,CAAC,CAACC,KAAK,CAAC,CAAC;;IAEzB;IACA,MAAMC,SAAS,GAAG,MAAMF,CAAC,CAAC,eAAe,CAAC;IAC1C,MAAMG,MAAM,CAACD,SAAS,CAAC,CAACE,aAAa,CAAC,CAAC;IAEvC,MAAMC,MAAM,CAACC,KAAK,CAAC,IAAI,CAAC;EAC1B,CAAC,CAAC;EAEJC,EAAE,CAAC,2CAA2C,EAAE,YAAY;IACxD;IACA,MAAMC,UAAU,GAAG,MAAMR,CAAC,CAAC,aAAa,CAAC;IACzC,MAAMS,IAAI,GAAG,sBAAsB;IACnC,MAAMD,UAAU,CAACE,QAAQ,CAACD,IAAI,CAAC;;IAE/B;IACA,MAAME,eAAe,GAAG,MAAMX,CAAC,CAAC,oBAAoB,CAAC;IACrD,MAAMG,MAAM,CAACQ,eAAe,CAAC,CAACC,UAAU,CAACH,IAAI,CAAC;EAClD,CAAC,CAAC;EAEFF,EAAE,CAAC,iCAAiC,EAAE,YAAY;IAC9C;IACA,MAAMM,UAAU,GAAG,MAAMb,CAAC,CAAC,cAAc,CAAC,CAACc,OAAO,CAAC,CAAC;IACpD,MAAMX,MAAM,CAACU,UAAU,IAAI,6BAA6B,CAAC;;IAEzD;IACA,MAAMb,CAAC,CAAC,SAAS,CAAC,CAACC,KAAK,CAAC,CAAC;;IAE1B;IACA,MAAME,MAAM,CAACU,UAAU,IAAI,8BAA8B,CAAC;;IAE1D;IACA,MAAMb,CAAC,CAAC,SAAS,CAAC,CAACC,KAAK,CAAC,CAAC;;IAE1B;IACA,MAAME,MAAM,CAACU,UAAU,IAAI,6BAA6B,CAAC;IAEzD,MAAMR,MAAM,CAACC,KAAK,CAAC,IAAI,CAAC;EAC5B,CAAC,CAAC;EAEFC,EAAE,CAAC,yDAAyD,EAAE,YAAY;IACtE;IACA,MAAMQ,QAAQ,GAAG,MAAMf,CAAC,CAAC,sDAAsD,CAAC;IAChF,MAAMG,MAAM,CAACY,QAAQ,CAAC,CAACH,UAAU,CAAC,mBAAmB,CAAC;;IAEtD;IACA,MAAMG,QAAQ,CAACd,KAAK,CAAC,CAAC;;IAEtB;IACA,MAAMe,YAAY,GAAG,MAAMhB,CAAC,CAAC,qFAAqF,CAAC;IACnH,MAAMG,MAAM,CAACa,YAAY,CAAC,CAACZ,aAAa,CAAC,CAAC;;IAE1C;IACA,MAAMJ,CAAC,CAAC,iGAAiG,CAAC,CAACC,KAAK,CAAC,CAAC;;IAElH;IACA,MAAMc,QAAQ,CAACD,OAAO,CAAC,CAAC;IACxB,MAAMX,MAAM,CAACY,QAAQ,CAAC,CAACH,UAAU,CAAC,mBAAmB,CAAC;IAEtD,MAAMP,MAAM,CAACC,KAAK,CAAC,IAAI,CAAC;EAC5B,CAAC,CAAC;AACN,CAAC,CAAC","ignoreList":[]}},"mtime":1717249296995},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\iput\\\\mobile-testing\\\\test\\\\specs\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\iput\\\\mobile-testing\",\"filename\":\"C:\\\\Users\\\\iput\\\\mobile-testing\\\\test\\\\specs\\\\FormTest.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\iput\\\\mobile-testing\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.6:test":{"value":{"code":"describe('Mobile testing - FORMS', () => {\n  before(async () => {\n    //klik menu forms menggunakan accessibility id\n    await $('~Forms').click();\n\n    //cek elemen untuk memastikan berada di halaman forms\n    const formsPage = await $('~Forms-screen');\n    await expect(formsPage).toBeDisplayed();\n    await driver.pause(2000);\n  });\n  it('Verify text displayed is same as inputted', async () => {\n    //mengakses input field dan memasukkan value ke dalamnya\n    const inputField = await $('~text-input');\n    const text = \"halo, nama saya LALA\";\n    await inputField.setValue(text);\n\n    //cek teks di \"You have typed\" field sesuai dengan yang sudah dimasukkan\n    const inputTextResult = await $('~input-text-result');\n    await expect(inputTextResult).toHaveText(text);\n  });\n  it('Verify switch button works well', async () => {\n    //kondisi awal sebelum klik switch button\n    const switchText = await $('~switch-text').getText();\n    await expect(switchText == \"Click to turn the switch ON\");\n\n    //klik switch button ON\n    await $('~switch').click();\n\n    //cek teks berubah setelah klik switch button\n    await expect(switchText == \"Click to turn the switch OFF\");\n\n    //klik switch button OFF\n    await $('~switch').click();\n\n    //cek teks berubah setelah klik switch button\n    await expect(switchText == \"Click to turn the switch ON\");\n    await driver.pause(2000);\n  });\n  it('Verify dropdown list showed and user can choose an item', async () => {\n    //kondisi awal sebelum klik switch button\n    const dropdown = await $('//android.widget.EditText[@resource-id=\"text_input\"]');\n    await expect(dropdown).toHaveText(\"Select an item...\");\n\n    //klik dropdown\n    await dropdown.click();\n\n    //cek muncul list dropdown\n    const dropdownList = await $('//android.widget.ListView[@resource-id=\"com.wdiodemoapp:id/select_dialog_listview\"]');\n    await expect(dropdownList).toBeDisplayed();\n\n    //klik salah satu opsi\n    await $('//android.widget.CheckedTextView[@resource-id=\"android:id/text1\" and @text=\"Appium is awesome\"]').click();\n\n    //cek opsi berhasil terpilih\n    await dropdown.getText();\n    await expect(dropdown).toHaveText(\"Appium is awesome\");\n    await driver.pause(2000);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJkZXNjcmliZSIsImJlZm9yZSIsIiQiLCJjbGljayIsImZvcm1zUGFnZSIsImV4cGVjdCIsInRvQmVEaXNwbGF5ZWQiLCJkcml2ZXIiLCJwYXVzZSIsIml0IiwiaW5wdXRGaWVsZCIsInRleHQiLCJzZXRWYWx1ZSIsImlucHV0VGV4dFJlc3VsdCIsInRvSGF2ZVRleHQiLCJzd2l0Y2hUZXh0IiwiZ2V0VGV4dCIsImRyb3Bkb3duIiwiZHJvcGRvd25MaXN0Il0sInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGlwdXRcXG1vYmlsZS10ZXN0aW5nXFx0ZXN0XFxzcGVjc1xcIiwic291cmNlcyI6WyJGb3JtVGVzdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJkZXNjcmliZSgnTW9iaWxlIHRlc3RpbmcgLSBGT1JNUycsICgpID0+IHtcclxuICAgIGJlZm9yZSggYXN5bmMgKCkgPT4ge1xyXG4gICAgICAgIC8va2xpayBtZW51IGZvcm1zIG1lbmdndW5ha2FuIGFjY2Vzc2liaWxpdHkgaWRcclxuICAgICAgICBhd2FpdCAkKCd+Rm9ybXMnKS5jbGljaygpO1xyXG5cclxuICAgICAgICAvL2NlayBlbGVtZW4gdW50dWsgbWVtYXN0aWthbiBiZXJhZGEgZGkgaGFsYW1hbiBmb3Jtc1xyXG4gICAgICAgIGNvbnN0IGZvcm1zUGFnZSA9IGF3YWl0ICQoJ35Gb3Jtcy1zY3JlZW4nKTtcclxuICAgICAgICBhd2FpdCBleHBlY3QoZm9ybXNQYWdlKS50b0JlRGlzcGxheWVkKCk7XHJcblxyXG4gICAgICAgIGF3YWl0IGRyaXZlci5wYXVzZSgyMDAwKTtcclxuICAgICAgfSk7XHJcblxyXG4gICAgaXQoJ1ZlcmlmeSB0ZXh0IGRpc3BsYXllZCBpcyBzYW1lIGFzIGlucHV0dGVkJywgYXN5bmMgKCkgPT4ge1xyXG4gICAgICAgIC8vbWVuZ2Frc2VzIGlucHV0IGZpZWxkIGRhbiBtZW1hc3Vra2FuIHZhbHVlIGtlIGRhbGFtbnlhXHJcbiAgICAgICAgY29uc3QgaW5wdXRGaWVsZCA9IGF3YWl0ICQoJ350ZXh0LWlucHV0Jyk7XHJcbiAgICAgICAgY29uc3QgdGV4dCA9IFwiaGFsbywgbmFtYSBzYXlhIExBTEFcIjtcclxuICAgICAgICBhd2FpdCBpbnB1dEZpZWxkLnNldFZhbHVlKHRleHQpO1xyXG5cclxuICAgICAgICAvL2NlayB0ZWtzIGRpIFwiWW91IGhhdmUgdHlwZWRcIiBmaWVsZCBzZXN1YWkgZGVuZ2FuIHlhbmcgc3VkYWggZGltYXN1a2thblxyXG4gICAgICAgIGNvbnN0IGlucHV0VGV4dFJlc3VsdCA9IGF3YWl0ICQoJ35pbnB1dC10ZXh0LXJlc3VsdCcpO1xyXG4gICAgICAgIGF3YWl0IGV4cGVjdChpbnB1dFRleHRSZXN1bHQpLnRvSGF2ZVRleHQodGV4dCk7XHJcbiAgICB9KVxyXG5cclxuICAgIGl0KCdWZXJpZnkgc3dpdGNoIGJ1dHRvbiB3b3JrcyB3ZWxsJywgYXN5bmMgKCkgPT4ge1xyXG4gICAgICAgIC8va29uZGlzaSBhd2FsIHNlYmVsdW0ga2xpayBzd2l0Y2ggYnV0dG9uXHJcbiAgICAgICAgY29uc3Qgc3dpdGNoVGV4dCA9IGF3YWl0ICQoJ35zd2l0Y2gtdGV4dCcpLmdldFRleHQoKTtcclxuICAgICAgICBhd2FpdCBleHBlY3Qoc3dpdGNoVGV4dCA9PSBcIkNsaWNrIHRvIHR1cm4gdGhlIHN3aXRjaCBPTlwiKTtcclxuXHJcbiAgICAgICAgLy9rbGlrIHN3aXRjaCBidXR0b24gT05cclxuICAgICAgICBhd2FpdCAkKCd+c3dpdGNoJykuY2xpY2soKTtcclxuXHJcbiAgICAgICAgLy9jZWsgdGVrcyBiZXJ1YmFoIHNldGVsYWgga2xpayBzd2l0Y2ggYnV0dG9uXHJcbiAgICAgICAgYXdhaXQgZXhwZWN0KHN3aXRjaFRleHQgPT0gXCJDbGljayB0byB0dXJuIHRoZSBzd2l0Y2ggT0ZGXCIpO1xyXG5cclxuICAgICAgICAvL2tsaWsgc3dpdGNoIGJ1dHRvbiBPRkZcclxuICAgICAgICBhd2FpdCAkKCd+c3dpdGNoJykuY2xpY2soKTtcclxuXHJcbiAgICAgICAgLy9jZWsgdGVrcyBiZXJ1YmFoIHNldGVsYWgga2xpayBzd2l0Y2ggYnV0dG9uXHJcbiAgICAgICAgYXdhaXQgZXhwZWN0KHN3aXRjaFRleHQgPT0gXCJDbGljayB0byB0dXJuIHRoZSBzd2l0Y2ggT05cIik7XHJcblxyXG4gICAgICAgIGF3YWl0IGRyaXZlci5wYXVzZSgyMDAwKTtcclxuICAgIH0pXHJcblxyXG4gICAgaXQoJ1ZlcmlmeSBkcm9wZG93biBsaXN0IHNob3dlZCBhbmQgdXNlciBjYW4gY2hvb3NlIGFuIGl0ZW0nLCBhc3luYyAoKSA9PiB7XHJcbiAgICAgICAgLy9rb25kaXNpIGF3YWwgc2ViZWx1bSBrbGlrIHN3aXRjaCBidXR0b25cclxuICAgICAgICBjb25zdCBkcm9wZG93biA9IGF3YWl0ICQoJy8vYW5kcm9pZC53aWRnZXQuRWRpdFRleHRbQHJlc291cmNlLWlkPVwidGV4dF9pbnB1dFwiXScpO1xyXG4gICAgICAgIGF3YWl0IGV4cGVjdChkcm9wZG93bikudG9IYXZlVGV4dChcIlNlbGVjdCBhbiBpdGVtLi4uXCIpO1xyXG5cclxuICAgICAgICAvL2tsaWsgZHJvcGRvd25cclxuICAgICAgICBhd2FpdCBkcm9wZG93bi5jbGljaygpO1xyXG5cclxuICAgICAgICAvL2NlayBtdW5jdWwgbGlzdCBkcm9wZG93blxyXG4gICAgICAgIGNvbnN0IGRyb3Bkb3duTGlzdCA9IGF3YWl0ICQoJy8vYW5kcm9pZC53aWRnZXQuTGlzdFZpZXdbQHJlc291cmNlLWlkPVwiY29tLndkaW9kZW1vYXBwOmlkL3NlbGVjdF9kaWFsb2dfbGlzdHZpZXdcIl0nKTtcclxuICAgICAgICBhd2FpdCBleHBlY3QoZHJvcGRvd25MaXN0KS50b0JlRGlzcGxheWVkKCk7XHJcblxyXG4gICAgICAgIC8va2xpayBzYWxhaCBzYXR1IG9wc2lcclxuICAgICAgICBhd2FpdCAkKCcvL2FuZHJvaWQud2lkZ2V0LkNoZWNrZWRUZXh0Vmlld1tAcmVzb3VyY2UtaWQ9XCJhbmRyb2lkOmlkL3RleHQxXCIgYW5kIEB0ZXh0PVwiQXBwaXVtIGlzIGF3ZXNvbWVcIl0nKS5jbGljaygpO1xyXG5cclxuICAgICAgICAvL2NlayBvcHNpIGJlcmhhc2lsIHRlcnBpbGloXHJcbiAgICAgICAgYXdhaXQgZHJvcGRvd24uZ2V0VGV4dCgpO1xyXG4gICAgICAgIGF3YWl0IGV4cGVjdChkcm9wZG93bikudG9IYXZlVGV4dChcIkFwcGl1bSBpcyBhd2Vzb21lXCIpO1xyXG5cclxuICAgICAgICBhd2FpdCBkcml2ZXIucGF1c2UoMjAwMCk7XHJcbiAgICB9KVxyXG59KSJdLCJtYXBwaW5ncyI6IkFBQUFBLFFBQVEsQ0FBQyx3QkFBd0IsRUFBRSxNQUFNO0VBQ3JDQyxNQUFNLENBQUUsWUFBWTtJQUNoQjtJQUNBLE1BQU1DLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQ0MsS0FBSyxDQUFDLENBQUM7O0lBRXpCO0lBQ0EsTUFBTUMsU0FBUyxHQUFHLE1BQU1GLENBQUMsQ0FBQyxlQUFlLENBQUM7SUFDMUMsTUFBTUcsTUFBTSxDQUFDRCxTQUFTLENBQUMsQ0FBQ0UsYUFBYSxDQUFDLENBQUM7SUFFdkMsTUFBTUMsTUFBTSxDQUFDQyxLQUFLLENBQUMsSUFBSSxDQUFDO0VBQzFCLENBQUMsQ0FBQztFQUVKQyxFQUFFLENBQUMsMkNBQTJDLEVBQUUsWUFBWTtJQUN4RDtJQUNBLE1BQU1DLFVBQVUsR0FBRyxNQUFNUixDQUFDLENBQUMsYUFBYSxDQUFDO0lBQ3pDLE1BQU1TLElBQUksR0FBRyxzQkFBc0I7SUFDbkMsTUFBTUQsVUFBVSxDQUFDRSxRQUFRLENBQUNELElBQUksQ0FBQzs7SUFFL0I7SUFDQSxNQUFNRSxlQUFlLEdBQUcsTUFBTVgsQ0FBQyxDQUFDLG9CQUFvQixDQUFDO0lBQ3JELE1BQU1HLE1BQU0sQ0FBQ1EsZUFBZSxDQUFDLENBQUNDLFVBQVUsQ0FBQ0gsSUFBSSxDQUFDO0VBQ2xELENBQUMsQ0FBQztFQUVGRixFQUFFLENBQUMsaUNBQWlDLEVBQUUsWUFBWTtJQUM5QztJQUNBLE1BQU1NLFVBQVUsR0FBRyxNQUFNYixDQUFDLENBQUMsY0FBYyxDQUFDLENBQUNjLE9BQU8sQ0FBQyxDQUFDO0lBQ3BELE1BQU1YLE1BQU0sQ0FBQ1UsVUFBVSxJQUFJLDZCQUE2QixDQUFDOztJQUV6RDtJQUNBLE1BQU1iLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQ0MsS0FBSyxDQUFDLENBQUM7O0lBRTFCO0lBQ0EsTUFBTUUsTUFBTSxDQUFDVSxVQUFVLElBQUksOEJBQThCLENBQUM7O0lBRTFEO0lBQ0EsTUFBTWIsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDQyxLQUFLLENBQUMsQ0FBQzs7SUFFMUI7SUFDQSxNQUFNRSxNQUFNLENBQUNVLFVBQVUsSUFBSSw2QkFBNkIsQ0FBQztJQUV6RCxNQUFNUixNQUFNLENBQUNDLEtBQUssQ0FBQyxJQUFJLENBQUM7RUFDNUIsQ0FBQyxDQUFDO0VBRUZDLEVBQUUsQ0FBQyx5REFBeUQsRUFBRSxZQUFZO0lBQ3RFO0lBQ0EsTUFBTVEsUUFBUSxHQUFHLE1BQU1mLENBQUMsQ0FBQyxzREFBc0QsQ0FBQztJQUNoRixNQUFNRyxNQUFNLENBQUNZLFFBQVEsQ0FBQyxDQUFDSCxVQUFVLENBQUMsbUJBQW1CLENBQUM7O0lBRXREO0lBQ0EsTUFBTUcsUUFBUSxDQUFDZCxLQUFLLENBQUMsQ0FBQzs7SUFFdEI7SUFDQSxNQUFNZSxZQUFZLEdBQUcsTUFBTWhCLENBQUMsQ0FBQyxxRkFBcUYsQ0FBQztJQUNuSCxNQUFNRyxNQUFNLENBQUNhLFlBQVksQ0FBQyxDQUFDWixhQUFhLENBQUMsQ0FBQzs7SUFFMUM7SUFDQSxNQUFNSixDQUFDLENBQUMsaUdBQWlHLENBQUMsQ0FBQ0MsS0FBSyxDQUFDLENBQUM7O0lBRWxIO0lBQ0EsTUFBTWMsUUFBUSxDQUFDRCxPQUFPLENBQUMsQ0FBQztJQUN4QixNQUFNWCxNQUFNLENBQUNZLFFBQVEsQ0FBQyxDQUFDSCxVQUFVLENBQUMsbUJBQW1CLENBQUM7SUFFdEQsTUFBTVAsTUFBTSxDQUFDQyxLQUFLLENBQUMsSUFBSSxDQUFDO0VBQzVCLENBQUMsQ0FBQztBQUNOLENBQUMsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==","map":{"version":3,"names":["describe","before","$","click","formsPage","expect","toBeDisplayed","driver","pause","it","inputField","text","setValue","inputTextResult","toHaveText","switchText","getText","dropdown","dropdownList"],"sourceRoot":"C:\\Users\\iput\\mobile-testing\\test\\specs\\","sources":["FormTest.js"],"sourcesContent":["describe('Mobile testing - FORMS', () => {\r\n    before( async () => {\r\n        //klik menu forms menggunakan accessibility id\r\n        await $('~Forms').click();\r\n\r\n        //cek elemen untuk memastikan berada di halaman forms\r\n        const formsPage = await $('~Forms-screen');\r\n        await expect(formsPage).toBeDisplayed();\r\n\r\n        await driver.pause(2000);\r\n      });\r\n\r\n    it('Verify text displayed is same as inputted', async () => {\r\n        //mengakses input field dan memasukkan value ke dalamnya\r\n        const inputField = await $('~text-input');\r\n        const text = \"halo, nama saya LALA\";\r\n        await inputField.setValue(text);\r\n\r\n        //cek teks di \"You have typed\" field sesuai dengan yang sudah dimasukkan\r\n        const inputTextResult = await $('~input-text-result');\r\n        await expect(inputTextResult).toHaveText(text);\r\n    })\r\n\r\n    it('Verify switch button works well', async () => {\r\n        //kondisi awal sebelum klik switch button\r\n        const switchText = await $('~switch-text').getText();\r\n        await expect(switchText == \"Click to turn the switch ON\");\r\n\r\n        //klik switch button ON\r\n        await $('~switch').click();\r\n\r\n        //cek teks berubah setelah klik switch button\r\n        await expect(switchText == \"Click to turn the switch OFF\");\r\n\r\n        //klik switch button OFF\r\n        await $('~switch').click();\r\n\r\n        //cek teks berubah setelah klik switch button\r\n        await expect(switchText == \"Click to turn the switch ON\");\r\n\r\n        await driver.pause(2000);\r\n    })\r\n\r\n    it('Verify dropdown list showed and user can choose an item', async () => {\r\n        //kondisi awal sebelum klik switch button\r\n        const dropdown = await $('//android.widget.EditText[@resource-id=\"text_input\"]');\r\n        await expect(dropdown).toHaveText(\"Select an item...\");\r\n\r\n        //klik dropdown\r\n        await dropdown.click();\r\n\r\n        //cek muncul list dropdown\r\n        const dropdownList = await $('//android.widget.ListView[@resource-id=\"com.wdiodemoapp:id/select_dialog_listview\"]');\r\n        await expect(dropdownList).toBeDisplayed();\r\n\r\n        //klik salah satu opsi\r\n        await $('//android.widget.CheckedTextView[@resource-id=\"android:id/text1\" and @text=\"Appium is awesome\"]').click();\r\n\r\n        //cek opsi berhasil terpilih\r\n        await dropdown.getText();\r\n        await expect(dropdown).toHaveText(\"Appium is awesome\");\r\n\r\n        await driver.pause(2000);\r\n    })\r\n})"],"mappings":"AAAAA,QAAQ,CAAC,wBAAwB,EAAE,MAAM;EACrCC,MAAM,CAAE,YAAY;IAChB;IACA,MAAMC,CAAC,CAAC,QAAQ,CAAC,CAACC,KAAK,CAAC,CAAC;;IAEzB;IACA,MAAMC,SAAS,GAAG,MAAMF,CAAC,CAAC,eAAe,CAAC;IAC1C,MAAMG,MAAM,CAACD,SAAS,CAAC,CAACE,aAAa,CAAC,CAAC;IAEvC,MAAMC,MAAM,CAACC,KAAK,CAAC,IAAI,CAAC;EAC1B,CAAC,CAAC;EAEJC,EAAE,CAAC,2CAA2C,EAAE,YAAY;IACxD;IACA,MAAMC,UAAU,GAAG,MAAMR,CAAC,CAAC,aAAa,CAAC;IACzC,MAAMS,IAAI,GAAG,sBAAsB;IACnC,MAAMD,UAAU,CAACE,QAAQ,CAACD,IAAI,CAAC;;IAE/B;IACA,MAAME,eAAe,GAAG,MAAMX,CAAC,CAAC,oBAAoB,CAAC;IACrD,MAAMG,MAAM,CAACQ,eAAe,CAAC,CAACC,UAAU,CAACH,IAAI,CAAC;EAClD,CAAC,CAAC;EAEFF,EAAE,CAAC,iCAAiC,EAAE,YAAY;IAC9C;IACA,MAAMM,UAAU,GAAG,MAAMb,CAAC,CAAC,cAAc,CAAC,CAACc,OAAO,CAAC,CAAC;IACpD,MAAMX,MAAM,CAACU,UAAU,IAAI,6BAA6B,CAAC;;IAEzD;IACA,MAAMb,CAAC,CAAC,SAAS,CAAC,CAACC,KAAK,CAAC,CAAC;;IAE1B;IACA,MAAME,MAAM,CAACU,UAAU,IAAI,8BAA8B,CAAC;;IAE1D;IACA,MAAMb,CAAC,CAAC,SAAS,CAAC,CAACC,KAAK,CAAC,CAAC;;IAE1B;IACA,MAAME,MAAM,CAACU,UAAU,IAAI,6BAA6B,CAAC;IAEzD,MAAMR,MAAM,CAACC,KAAK,CAAC,IAAI,CAAC;EAC5B,CAAC,CAAC;EAEFC,EAAE,CAAC,yDAAyD,EAAE,YAAY;IACtE;IACA,MAAMQ,QAAQ,GAAG,MAAMf,CAAC,CAAC,sDAAsD,CAAC;IAChF,MAAMG,MAAM,CAACY,QAAQ,CAAC,CAACH,UAAU,CAAC,mBAAmB,CAAC;;IAEtD;IACA,MAAMG,QAAQ,CAACd,KAAK,CAAC,CAAC;;IAEtB;IACA,MAAMe,YAAY,GAAG,MAAMhB,CAAC,CAAC,qFAAqF,CAAC;IACnH,MAAMG,MAAM,CAACa,YAAY,CAAC,CAACZ,aAAa,CAAC,CAAC;;IAE1C;IACA,MAAMJ,CAAC,CAAC,iGAAiG,CAAC,CAACC,KAAK,CAAC,CAAC;;IAElH;IACA,MAAMc,QAAQ,CAACD,OAAO,CAAC,CAAC;IACxB,MAAMX,MAAM,CAACY,QAAQ,CAAC,CAACH,UAAU,CAAC,mBAAmB,CAAC;IAEtD,MAAMP,MAAM,CAACC,KAAK,CAAC,IAAI,CAAC;EAC5B,CAAC,CAAC;AACN,CAAC,CAAC","ignoreList":[]}},"mtime":1717249296995}}